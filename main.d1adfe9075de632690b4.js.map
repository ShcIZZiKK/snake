{"version":3,"file":"main.d1adfe9075de632690b4.js","mappings":"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","sources":["webpack://snake/./src/styles/app.scss","webpack://snake/./node_modules/css-loader/dist/runtime/api.js","webpack://snake/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://snake/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://snake/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://snake/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://snake/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://snake/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://snake/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://snake/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://snake/webpack/bootstrap","webpack://snake/webpack/runtime/compat get default export","webpack://snake/webpack/runtime/define property getters","webpack://snake/webpack/runtime/hasOwnProperty shorthand","webpack://snake/webpack/runtime/publicPath","webpack://snake/webpack/runtime/jsonp chunk loading","webpack://snake/webpack/runtime/nonce","webpack://snake/./src/styles/app.scss?1aa7","webpack://snake/./src/app/managers/AudioManager.ts","webpack://snake/./src/app/helpers/Mediator.ts","webpack://snake/./src/app/helpers/Utils.ts","webpack://snake/./src/app/managers/UIManager.ts","webpack://snake/./src/app/managers/VisibilityManager.ts","webpack://snake/./src/app/managers/GameManager.ts","webpack://snake/./src/app/managers/StoreManager.ts","webpack://snake/./src/app/abstracts/DefaultGame.ts","webpack://snake/./src/app/games/snake/Snake.ts","webpack://snake/./src/app/games/snake/Food.ts","webpack://snake/./src/app/games/snake/Game.ts","webpack://snake/./src/app/games/arkanoid/Platform.ts","webpack://snake/./src/app/games/arkanoid/Ball.ts","webpack://snake/./src/app/games/arkanoid/Blocks.ts","webpack://snake/./src/app/games/arkanoid/Game.ts","webpack://snake/./src/app/games/2048/Tile.ts","webpack://snake/./src/app/games/2048/Background.ts","webpack://snake/./src/app/games/2048/Game.ts","webpack://snake/./src/app/App.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../assets/fonts/Pixeboy.ttf\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../assets/images/tv.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:\\\"Pixeboy\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format(\\\"truetype\\\")}*{box-sizing:border-box}body{font-family:\\\"Pixeboy\\\", sans-serif;background:black;display:flex;align-items:center;justify-content:center;color:white}canvas{position:absolute;left:110px;top:66px;border:1px solid rgba(255,255,255,0.5);display:none}canvas.is-active{display:block}button{border:none;outline:none;background-color:white;position:relative;display:block;padding:10px 10px;color:black;width:100%;text-transform:uppercase;font-size:32px;line-height:1;z-index:2}button:before,button:after{content:\\\"\\\";display:block;position:absolute;top:10px;height:calc(100% - 20px);left:-10px;right:-10px;background:white;z-index:-1}button:after{top:4px;height:calc(100% - 8px);left:-6px;right:-6px}.container{height:100vh;width:100vw;display:flex;align-items:center;justify-content:center}.game-container{position:relative;width:1020px;height:630px;min-width:1020px;min-height:630px}.game-container:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");background-position:center;background-size:contain;background-repeat:no-repeat;z-index:10}.game-ui{position:absolute;top:0;left:0;width:100%;height:100%}.game-menu{position:absolute;left:80px;top:80px;width:680px;display:none}.game-menu.is-active{display:block}.game-menu button{text-align:left;padding-left:30px;background-color:black;color:white}.game-menu button.is-active{background-color:white;color:black}.game-menu button:before,.game-menu button:after{display:none}.game-status{position:absolute;left:110px;top:130px;width:440px;text-align:center;font-size:100px;line-height:1;display:none}.game-status.is-active{display:block}.game-status__actions{display:flex;flex-direction:column;align-items:center}.game-status__actions button{width:150px;margin-top:20px}.game-status__actions button.is-active{background-color:greenyellow}.game-status__actions button.is-active:before,.game-status__actions button.is-active:after{background-color:greenyellow}.game-status__actions button.is-active span{background-color:white}.game-status__score{color:yellow;font-size:52px}.game-score{position:absolute;top:80px;left:580px;display:none}.game-score.is-active{display:block}.game-score .game-score__item{font-size:32px;line-height:1}.game-score .game-score__item:not(:first-child){margin-top:20px}.game-score .game-score__item span{color:yellow}.game-tv-mask{position:absolute;width:680px;height:500px;top:40px;left:80px;z-index:3}.game-tv-mask:after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:radial-gradient(rgba(0,0,0,0.2) 50%, transparent 100%),linear-gradient(rgba(0,0,0,0.1) 10%, transparent)}.game-tv-mask .game-tv-mask__noise{position:relative;width:100%;height:100%;overflow:hidden;border-radius:5% / 50%}.game-tv-mask .game-tv-mask__effect{position:absolute;width:100%;height:100%}.game-tv-mask .game-tv-mask__effect:before{content:\\\"\\\";position:absolute;width:100%;height:20%;background:rgba(255,255,255,0.2);animation:noiseeffect 4000ms infinite linear;border-radius:50% / 5%}.game-tv-mask .game-tv-mask__effect:after{content:\\\"\\\";position:absolute;width:100%;height:100%;background:radial-gradient(transparent 50%, rgba(0,0,0,0.8)),linear-gradient(rgba(255,255,255,0.4) 10%, transparent);box-shadow:inset 0 5px 25px rgba(255,255,255,0.2),inset 5px 0 15px rgba(255,255,255,0.2),inset -5px 0 15px rgba(255,255,255,0.1),0 0 10px #000,inset 0 200px 5px rgba(255,255,255,0.05);border-radius:50% / 5%}.game-helper{position:absolute;right:10px;top:20px;padding:30px 20px 20px;width:180px;margin:0;z-index:20;box-shadow:0 1px 2px rgba(0,0,0,0.6);font-family:sans-serif;transform:rotate(-5deg);background:#f6f8d3;background:linear-gradient(90deg, #f6f8d3 0%, #f0f39c 100%)}.game-helper:before{content:\\\"\\\";display:block;position:absolute;left:50%;top:-15px;width:75px;height:25px;transform:translateX(-50%) rotate(2deg);z-index:2;background-color:rgba(243,245,228,0.5);border:2px solid rgba(255,255,255,0.5);box-shadow:2px 2px 2px rgba(0,0,0,0.1)}.game-helper li{list-style:none;margin:0;color:black;font-weight:bold;font-size:14px;text-transform:uppercase;white-space:nowrap}.game-helper li:nth-child(even){color:#940000;margin-bottom:10px;text-transform:none}.game-helper li:last-child{margin-bottom:0}@keyframes noiseeffect{0%{top:-20%;opacity:0}20%{opacity:0}50%{opacity:0.8}80%{opacity:0}100%{top:100%;opacity:0}}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/normalize.css/normalize.css\",\"webpack://./src/styles/fonts.scss\",\"webpack://./src/styles/app.scss\"],\"names\":[],\"mappings\":\"AAAA,2EAAA,CAA4E,KAW1E,gBAAiB,CACjB,6BAA8B,CAC/B,KAUC,QAAS,CACV,KAOC,aAAc,CACf,GAQC,aAAc,CACd,eAAgB,CACjB,GAWC,sBAAuB,CACvB,QAAS,CACT,gBAAiB,CAClB,IAQC,gCAAiC,CACjC,aAAc,CACf,EAUC,4BAA6B,CAC9B,YAQC,kBAAmB,CACnB,yBAA0B,CAC1B,gCAAiC,CAClC,SAQC,kBAAmB,CACpB,cAUC,gCAAiC,CACjC,aAAc,CACf,MAOC,aAAc,CACf,QASC,aAAc,CACd,aAAc,CACd,iBAAkB,CAClB,uBAAwB,CACzB,IAGC,cAAe,CAChB,IAGC,UAAW,CACZ,IAUC,iBAAkB,CACnB,sCAeC,mBAAoB,CACpB,cAAe,CACf,gBAAiB,CACjB,QAAS,CACV,aASC,gBAAiB,CAClB,cASC,mBAAoB,CACrB,sDAUC,yBAA0B,CAC3B,8HAUC,iBAAkB,CAClB,SAAU,CACX,kHAUC,6BAA8B,CAC/B,SAOC,6BAA8B,CAC/B,OAUC,qBAAsB,CACtB,aAAc,CACd,aAAc,CACd,cAAe,CACf,SAAU,CACV,kBAAmB,CACpB,SAOC,uBAAwB,CACzB,SAOC,aAAc,CACf,iCASC,qBAAsB,CACtB,SAAU,CACX,sFAQC,WAAY,CACb,gBAQC,4BAA6B,CAC7B,mBAAoB,CACrB,2CAOC,uBAAwB,CACzB,6BAQC,yBAA0B,CAC1B,YAAa,CACd,QAUC,aAAc,CACf,QAOC,iBAAkB,CACnB,SAUC,YAAa,CACd,SAOC,YAAa,CACd,WC3VG,qBAAsB,CACtB,8DAA0D,CCE9D,EACI,qBAAsB,CACzB,KAGG,iCAAkC,CAClC,gBAAiB,CACjB,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,WAAY,CACf,OAGG,iBAAkB,CAClB,UAAW,CACX,QAAS,CACT,sCAA0C,CAC1C,YAAa,CALjB,iBAQQ,aAAc,CACjB,OAID,WAAY,CACZ,YAAa,CACb,sBAAuB,CACvB,iBAAkB,CAClB,aAAc,CACd,iBAAkB,CAClB,WAAY,CACZ,UAAW,CACX,wBAAyB,CACzB,cAAe,CACf,aAAc,CACd,SAAU,CAZd,2BAgBQ,UAAW,CACX,aAAc,CACd,iBAAkB,CAClB,QAAS,CACT,wBAAyB,CACzB,UAAW,CACX,WAAY,CACZ,gBAAiB,CACjB,UAAW,CAxBnB,aA4BQ,OAAQ,CACR,uBAAwB,CACxB,SAAU,CACV,UAAW,CACd,WAID,YAAa,CACb,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CAC1B,gBAGG,iBAAkB,CAClB,YAAa,CACb,YAAa,CACb,gBAAiB,CACjB,gBAAiB,CALrB,uBAQQ,iBAAkB,CAClB,UAAW,CACX,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,wDAAgD,CAChD,0BAA2B,CAC3B,uBAAwB,CACxB,2BAA4B,CAC5B,UAAW,CACd,SAID,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACf,WAGG,iBAAkB,CAClB,SAAU,CACV,QAAS,CACT,WAAY,CACZ,YAAa,CALjB,qBAQQ,aAAc,CARtB,kBAYQ,eAAgB,CAChB,iBAAkB,CAClB,sBAAuB,CACvB,WAAY,CAfpB,4BAkBY,sBAAuB,CACvB,WAAY,CAnBxB,iDAwBY,YAAa,CAChB,aAKL,iBAAkB,CAClB,UAAW,CACX,SAAU,CACV,WAAY,CACZ,iBAAkB,CAClB,eAAgB,CAChB,aAAc,CACd,YAAa,CARjB,uBAWQ,aAAc,CACjB,sBAID,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CAHvB,6BAMQ,WAAY,CACZ,eAAgB,CAPxB,uCAUY,4BAA6B,CAVzC,2FAcgB,4BAA6B,CAd7C,4CAkBgB,sBAAuB,CAC1B,oBAMT,YAAa,CACb,cAAe,CAClB,YAGG,iBAAkB,CAClB,QAAS,CACT,UAAW,CACX,YAAa,CAJjB,sBAOQ,aAAc,CAPtB,8BAWQ,cAAe,CACf,aAAc,CAZtB,gDAeY,eAAgB,CAf5B,mCAmBY,YAAa,CAChB,cAKL,iBAAkB,CAClB,WAAY,CACZ,YAAa,CACb,QAAS,CACT,SAAU,CACV,SAAU,CANd,oBASQ,UAAW,CACX,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,mHACwD,CAhBhE,mCAoBQ,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,eAAgB,CAChB,sBAAuB,CAxB/B,oCA4BQ,iBAAkB,CAClB,UAAW,CACX,WAAY,CA9BpB,2CAiCY,UAAW,CACX,iBAAkB,CAClB,UAAW,CACX,UAAW,CACX,gCAAoC,CACpC,4CAA6C,CAC7C,sBAAuB,CAvCnC,0CA2CY,UAAW,CACX,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,oHAC8D,CAC9D,uLAG+C,CAC/C,sBAAuB,CAC1B,aAKL,iBAAkB,CAClB,UAAW,CACX,QAAS,CACT,sBAAuB,CACvB,WAAY,CACZ,QAAS,CACT,UAAW,CACX,oCAAwC,CACxC,sBAAuB,CACvB,uBAAwB,CACxB,kBAA8B,CAC9B,2DAA0F,CAZ9F,oBAeQ,UAAW,CACX,aAAc,CACd,iBAAkB,CAClB,QAAS,CACT,SAAU,CACV,UAAW,CACX,WAAY,CACZ,uCAAwC,CACxC,SAAU,CACV,sCAA0C,CAC1C,sCAA0C,CAC1C,sCAA0C,CA1BlD,gBA8BQ,eAAgB,CAChB,QAAS,CACT,WAAY,CACZ,gBAAiB,CACjB,cAAe,CACf,wBAAyB,CACzB,kBAAmB,CApC3B,gCAuCY,aAAc,CACd,kBAAmB,CACnB,mBAAoB,CAzChC,2BA6CY,eAAgB,CACnB,uBAKL,GACI,QAAS,CACT,SAAU,CAGd,IACI,SAAU,CAGd,IACI,WAAY,CAGhB,IACI,SAAU,CAGd,KACI,QAAS,CACT,SAAU,CAAA\",\"sourcesContent\":[\"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\\n\\n/* Document\\n   ========================================================================== */\\n\\n/**\\n * 1. Correct the line height in all browsers.\\n * 2. Prevent adjustments of font size after orientation changes in iOS.\\n */\\n\\nhtml {\\n  line-height: 1.15; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/* Sections\\n   ========================================================================== */\\n\\n/**\\n * Remove the margin in all browsers.\\n */\\n\\nbody {\\n  margin: 0;\\n}\\n\\n/**\\n * Render the `main` element consistently in IE.\\n */\\n\\nmain {\\n  display: block;\\n}\\n\\n/**\\n * Correct the font size and margin on `h1` elements within `section` and\\n * `article` contexts in Chrome, Firefox, and Safari.\\n */\\n\\nh1 {\\n  font-size: 2em;\\n  margin: 0.67em 0;\\n}\\n\\n/* Grouping content\\n   ========================================================================== */\\n\\n/**\\n * 1. Add the correct box sizing in Firefox.\\n * 2. Show the overflow in Edge and IE.\\n */\\n\\nhr {\\n  box-sizing: content-box; /* 1 */\\n  height: 0; /* 1 */\\n  overflow: visible; /* 2 */\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\npre {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/* Text-level semantics\\n   ========================================================================== */\\n\\n/**\\n * Remove the gray background on active links in IE 10.\\n */\\n\\na {\\n  background-color: transparent;\\n}\\n\\n/**\\n * 1. Remove the bottom border in Chrome 57-\\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\n */\\n\\nabbr[title] {\\n  border-bottom: none; /* 1 */\\n  text-decoration: underline; /* 2 */\\n  text-decoration: underline dotted; /* 2 */\\n}\\n\\n/**\\n * Add the correct font weight in Chrome, Edge, and Safari.\\n */\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\ncode,\\nkbd,\\nsamp {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/**\\n * Add the correct font size in all browsers.\\n */\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/**\\n * Prevent `sub` and `sup` elements from affecting the line height in\\n * all browsers.\\n */\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/* Embedded content\\n   ========================================================================== */\\n\\n/**\\n * Remove the border on images inside links in IE 10.\\n */\\n\\nimg {\\n  border-style: none;\\n}\\n\\n/* Forms\\n   ========================================================================== */\\n\\n/**\\n * 1. Change the font styles in all browsers.\\n * 2. Remove the margin in Firefox and Safari.\\n */\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  line-height: 1.15; /* 1 */\\n  margin: 0; /* 2 */\\n}\\n\\n/**\\n * Show the overflow in IE.\\n * 1. Show the overflow in Edge.\\n */\\n\\nbutton,\\ninput { /* 1 */\\n  overflow: visible;\\n}\\n\\n/**\\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\\n * 1. Remove the inheritance of text transform in Firefox.\\n */\\n\\nbutton,\\nselect { /* 1 */\\n  text-transform: none;\\n}\\n\\n/**\\n * Correct the inability to style clickable types in iOS and Safari.\\n */\\n\\nbutton,\\n[type=\\\"button\\\"],\\n[type=\\\"reset\\\"],\\n[type=\\\"submit\\\"] {\\n  -webkit-appearance: button;\\n}\\n\\n/**\\n * Remove the inner border and padding in Firefox.\\n */\\n\\nbutton::-moz-focus-inner,\\n[type=\\\"button\\\"]::-moz-focus-inner,\\n[type=\\\"reset\\\"]::-moz-focus-inner,\\n[type=\\\"submit\\\"]::-moz-focus-inner {\\n  border-style: none;\\n  padding: 0;\\n}\\n\\n/**\\n * Restore the focus styles unset by the previous rule.\\n */\\n\\nbutton:-moz-focusring,\\n[type=\\\"button\\\"]:-moz-focusring,\\n[type=\\\"reset\\\"]:-moz-focusring,\\n[type=\\\"submit\\\"]:-moz-focusring {\\n  outline: 1px dotted ButtonText;\\n}\\n\\n/**\\n * Correct the padding in Firefox.\\n */\\n\\nfieldset {\\n  padding: 0.35em 0.75em 0.625em;\\n}\\n\\n/**\\n * 1. Correct the text wrapping in Edge and IE.\\n * 2. Correct the color inheritance from `fieldset` elements in IE.\\n * 3. Remove the padding so developers are not caught out when they zero out\\n *    `fieldset` elements in all browsers.\\n */\\n\\nlegend {\\n  box-sizing: border-box; /* 1 */\\n  color: inherit; /* 2 */\\n  display: table; /* 1 */\\n  max-width: 100%; /* 1 */\\n  padding: 0; /* 3 */\\n  white-space: normal; /* 1 */\\n}\\n\\n/**\\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n */\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/**\\n * Remove the default vertical scrollbar in IE 10+.\\n */\\n\\ntextarea {\\n  overflow: auto;\\n}\\n\\n/**\\n * 1. Add the correct box sizing in IE 10.\\n * 2. Remove the padding in IE 10.\\n */\\n\\n[type=\\\"checkbox\\\"],\\n[type=\\\"radio\\\"] {\\n  box-sizing: border-box; /* 1 */\\n  padding: 0; /* 2 */\\n}\\n\\n/**\\n * Correct the cursor style of increment and decrement buttons in Chrome.\\n */\\n\\n[type=\\\"number\\\"]::-webkit-inner-spin-button,\\n[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/**\\n * 1. Correct the odd appearance in Chrome and Safari.\\n * 2. Correct the outline style in Safari.\\n */\\n\\n[type=\\\"search\\\"] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/**\\n * Remove the inner padding in Chrome and Safari on macOS.\\n */\\n\\n[type=\\\"search\\\"]::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/**\\n * 1. Correct the inability to style clickable types in iOS and Safari.\\n * 2. Change font properties to `inherit` in Safari.\\n */\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/* Interactive\\n   ========================================================================== */\\n\\n/*\\n * Add the correct display in Edge, IE 10+, and Firefox.\\n */\\n\\ndetails {\\n  display: block;\\n}\\n\\n/*\\n * Add the correct display in all browsers.\\n */\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/* Misc\\n   ========================================================================== */\\n\\n/**\\n * Add the correct display in IE 10+.\\n */\\n\\ntemplate {\\n  display: none;\\n}\\n\\n/**\\n * Add the correct display in IE 10.\\n */\\n\\n[hidden] {\\n  display: none;\\n}\\n\",\"@font-face {\\r\\n    font-family: \\\"Pixeboy\\\";\\r\\n    src: url(\\\"../assets/fonts/Pixeboy.ttf\\\") format(\\\"truetype\\\");\\r\\n}\\r\\n\",\"@import \\\"~normalize.css\\\";\\r\\n\\r\\n@import \\\"fonts\\\";\\r\\n\\r\\n* {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    font-family: \\\"Pixeboy\\\", sans-serif;\\r\\n    background: black;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\ncanvas {\\r\\n    position: absolute;\\r\\n    left: 110px;\\r\\n    top: 66px;\\r\\n    border: 1px solid rgba(255, 255, 255, 0.5);\\r\\n    display: none;\\r\\n\\r\\n    &.is-active {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    border: none;\\r\\n    outline: none;\\r\\n    background-color: white;\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    padding: 10px 10px;\\r\\n    color: black;\\r\\n    width: 100%;\\r\\n    text-transform: uppercase;\\r\\n    font-size: 32px;\\r\\n    line-height: 1;\\r\\n    z-index: 2;\\r\\n\\r\\n    &:before,\\r\\n    &:after {\\r\\n        content: \\\"\\\";\\r\\n        display: block;\\r\\n        position: absolute;\\r\\n        top: 10px;\\r\\n        height: calc(100% - 20px);\\r\\n        left: -10px;\\r\\n        right: -10px;\\r\\n        background: white;\\r\\n        z-index: -1;\\r\\n    }\\r\\n\\r\\n    &:after {\\r\\n        top: 4px;\\r\\n        height: calc(100% - 8px);\\r\\n        left: -6px;\\r\\n        right: -6px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.container {\\r\\n    height: 100vh;\\r\\n    width: 100vw;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.game-container {\\r\\n    position: relative;\\r\\n    width: 1020px;\\r\\n    height: 630px;\\r\\n    min-width: 1020px;\\r\\n    min-height: 630px;\\r\\n\\r\\n    &:before {\\r\\n        position: absolute;\\r\\n        content: \\\"\\\";\\r\\n        top: 0;\\r\\n        left: 0;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        background-image: url(\\\"../assets/images/tv.png\\\");\\r\\n        background-position: center;\\r\\n        background-size: contain;\\r\\n        background-repeat: no-repeat;\\r\\n        z-index: 10;\\r\\n    }\\r\\n}\\r\\n\\r\\n.game-ui {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.game-menu {\\r\\n    position: absolute;\\r\\n    left: 80px;\\r\\n    top: 80px;\\r\\n    width: 680px;\\r\\n    display: none;\\r\\n\\r\\n    &.is-active {\\r\\n        display: block;\\r\\n    }\\r\\n\\r\\n    button {\\r\\n        text-align: left;\\r\\n        padding-left: 30px;\\r\\n        background-color: black;\\r\\n        color: white;\\r\\n\\r\\n        &.is-active {\\r\\n            background-color: white;\\r\\n            color: black;\\r\\n        }\\r\\n\\r\\n        &:before,\\r\\n        &:after {\\r\\n            display: none;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.game-status {\\r\\n    position: absolute;\\r\\n    left: 110px;\\r\\n    top: 130px;\\r\\n    width: 440px;\\r\\n    text-align: center;\\r\\n    font-size: 100px;\\r\\n    line-height: 1;\\r\\n    display: none;\\r\\n\\r\\n    &.is-active {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\n.game-status__actions {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n\\r\\n    button {\\r\\n        width: 150px;\\r\\n        margin-top: 20px;\\r\\n\\r\\n        &.is-active {\\r\\n            background-color: greenyellow;\\r\\n\\r\\n            &:before,\\r\\n            &:after {\\r\\n                background-color: greenyellow;\\r\\n            }\\r\\n\\r\\n            span {\\r\\n                background-color: white;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.game-status__score {\\r\\n    color: yellow;\\r\\n    font-size: 52px;\\r\\n}\\r\\n\\r\\n.game-score {\\r\\n    position: absolute;\\r\\n    top: 80px;\\r\\n    left: 580px;\\r\\n    display: none;\\r\\n\\r\\n    &.is-active {\\r\\n        display: block;\\r\\n    }\\r\\n\\r\\n    .game-score__item {\\r\\n        font-size: 32px;\\r\\n        line-height: 1;\\r\\n\\r\\n        &:not(:first-child) {\\r\\n            margin-top: 20px;\\r\\n        }\\r\\n\\r\\n        span {\\r\\n            color: yellow;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.game-tv-mask {\\r\\n    position: absolute;\\r\\n    width: 680px;\\r\\n    height: 500px;\\r\\n    top: 40px;\\r\\n    left: 80px;\\r\\n    z-index: 3;\\r\\n\\r\\n    &:after {\\r\\n        content: \\\"\\\";\\r\\n        position: absolute;\\r\\n        top: 0;\\r\\n        left: 0;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        background: radial-gradient(rgba(0, 0, 0, 0.2) 50%, transparent 100%),\\r\\n            linear-gradient(rgba(0, 0, 0, 0.1) 10%, transparent);\\r\\n    }\\r\\n\\r\\n    .game-tv-mask__noise {\\r\\n        position: relative;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        overflow: hidden;\\r\\n        border-radius: 5% / 50%;\\r\\n    }\\r\\n\\r\\n    .game-tv-mask__effect {\\r\\n        position: absolute;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n\\r\\n        &:before {\\r\\n            content: \\\"\\\";\\r\\n            position: absolute;\\r\\n            width: 100%;\\r\\n            height: 20%;\\r\\n            background: rgba(255, 255, 255, 0.2);\\r\\n            animation: noiseeffect 4000ms infinite linear;\\r\\n            border-radius: 50% / 5%;\\r\\n        }\\r\\n\\r\\n        &:after {\\r\\n            content: \\\"\\\";\\r\\n            position: absolute;\\r\\n            width: 100%;\\r\\n            height: 100%;\\r\\n            background: radial-gradient(transparent 50%, rgba(0, 0, 0, 0.8)),\\r\\n                linear-gradient(rgba(255, 255, 255, 0.4) 10%, transparent);\\r\\n            box-shadow: inset 0 5px 25px rgba(255, 255, 255, 0.2),\\r\\n                inset 5px 0 15px rgba(255, 255, 255, 0.2),\\r\\n                inset -5px 0 15px rgba(255, 255, 255, 0.1), 0 0 10px rgba(0, 0, 0, 1),\\r\\n                inset 0 200px 5px rgba(255, 255, 255, 0.05);\\r\\n            border-radius: 50% / 5%;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.game-helper {\\r\\n    position: absolute;\\r\\n    right: 10px;\\r\\n    top: 20px;\\r\\n    padding: 30px 20px 20px;\\r\\n    width: 180px;\\r\\n    margin: 0;\\r\\n    z-index: 20;\\r\\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);\\r\\n    font-family: sans-serif;\\r\\n    transform: rotate(-5deg);\\r\\n    background: rgb(246, 248, 211);\\r\\n    background: linear-gradient(90deg, rgba(246, 248, 211, 1) 0%, rgba(240, 243, 156, 1) 100%);\\r\\n\\r\\n    &:before {\\r\\n        content: \\\"\\\";\\r\\n        display: block;\\r\\n        position: absolute;\\r\\n        left: 50%;\\r\\n        top: -15px;\\r\\n        width: 75px;\\r\\n        height: 25px;\\r\\n        transform: translateX(-50%) rotate(2deg);\\r\\n        z-index: 2;\\r\\n        background-color: rgba(243, 245, 228, 0.5);\\r\\n        border: 2px solid rgba(255, 255, 255, 0.5);\\r\\n        box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);\\r\\n    }\\r\\n\\r\\n    li {\\r\\n        list-style: none;\\r\\n        margin: 0;\\r\\n        color: black;\\r\\n        font-weight: bold;\\r\\n        font-size: 14px;\\r\\n        text-transform: uppercase;\\r\\n        white-space: nowrap;\\r\\n\\r\\n        &:nth-child(even) {\\r\\n            color: #940000;\\r\\n            margin-bottom: 10px;\\r\\n            text-transform: none;\\r\\n        }\\r\\n\\r\\n        &:last-child {\\r\\n            margin-bottom: 0;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes noiseeffect {\\r\\n    0% {\\r\\n        top: -20%;\\r\\n        opacity: 0;\\r\\n    }\\r\\n\\r\\n    20% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n\\r\\n    50% {\\r\\n        opacity: 0.8;\\r\\n    }\\r\\n\\r\\n    80% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n\\r\\n    100% {\\r\\n        top: 100%;\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/web-games/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./app.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./app.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Sound } from '../interfaces';\r\n\r\nclass AudioManager {\r\n  private dir = 'assets/audio/'; // Директория от куда берутся звуки\r\n  private sounds: Array<Sound> = []; // Массив музыки\r\n\r\n  /**\r\n   * Добавляет музуку в менеджер\r\n   * @param sounds\r\n   */\r\n  public addMusicList(sounds: Array<Sound>) {\r\n    sounds.forEach((item: Sound) => {\r\n      const findSound = this.sounds.find((sound) => sound.name === item.name);\r\n\r\n      if (findSound) {\r\n        return;\r\n      }\r\n\r\n      item.manager = this.createAudioManager(item.file, item.loop, item.volume);\r\n    });\r\n\r\n    this.sounds = [...this.sounds, ...sounds];\r\n  }\r\n\r\n  /**\r\n   * Запускает определённую музыку по имени\r\n   * @param name\r\n   */\r\n  public musicPlay(name: string) {\r\n    const musicObject = this.findMusic(name);\r\n\r\n    if (!musicObject) {\r\n      return;\r\n    }\r\n\r\n    musicObject.manager.play();\r\n  }\r\n\r\n  /**\r\n   * Останавливает определённую музыку по имени\r\n   * @param name\r\n   */\r\n  public musicStop(name: string) {\r\n    const musicObject = this.findMusic(name);\r\n\r\n    if (!musicObject) {\r\n      return;\r\n    }\r\n\r\n    musicObject.manager.pause();\r\n    musicObject.manager.currentTime = 0;\r\n  }\r\n\r\n  /**\r\n   * Ищет определённую музыку по имени\r\n   * @param name\r\n   */\r\n  private findMusic(name: string) {\r\n    return this.sounds.find((item) => item.name === name);\r\n  }\r\n\r\n  /**\r\n   * Создаёт HTMLAudioElement\r\n   * @param file\r\n   * @param loop\r\n   * @param volume\r\n   * @private\r\n   */\r\n  private createAudioManager(file: string, loop: boolean, volume: number) {\r\n    const manager = new Audio();\r\n\r\n    manager.src = `${this.dir}${file}`;\r\n\r\n    if (loop) {\r\n      manager.loop = true;\r\n    }\r\n\r\n    if (volume) {\r\n      manager.volume = 0.3;\r\n    }\r\n\r\n    return manager;\r\n  }\r\n}\r\n\r\nexport default AudioManager;\r\n","interface Channel {\r\n  context: Mediator,\r\n  callback: any, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n}\r\n\r\ninterface Channels {\r\n  [key: string]: Array<Channel>\r\n}\r\n\r\nclass Mediator {\r\n  private static instance: Mediator;\r\n  private static channels: Channels = {};\r\n\r\n  public static getInstance(): Mediator {\r\n    if (!Mediator.instance) {\r\n      Mediator.instance = new Mediator();\r\n    }\r\n\r\n    return Mediator.instance;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  subscribe(channel: string, fn: (args: any) => void) {\r\n    if (!Mediator.channels[channel]) {\r\n      Mediator.channels[channel] = [];\r\n    }\r\n\r\n    Mediator.channels[channel].push({\r\n      context: this,\r\n      callback: fn,\r\n    });\r\n  }\r\n\r\n  unsubscribe(channel: string) {\r\n    if (!Mediator.channels[channel]) {\r\n      return false;\r\n    }\r\n\r\n    delete Mediator.channels[channel];\r\n\r\n    return this;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  publish(channel: string, ...props: any) {\r\n    if (!Mediator.channels[channel]) {\r\n      return false;\r\n    }\r\n\r\n    const args = Array.prototype.slice.call(props, 0);\r\n\r\n    Mediator.channels[channel].forEach((subscription) => {\r\n      subscription.callback.apply(subscription.context, args);\r\n    });\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Mediator;\r\n","class Utils {\r\n  /**\r\n   * Генератор случайных чисел в заданном диапазоне\r\n   * @param min - минимальное значение\r\n   * @param max - максимальное значение\r\n   */\r\n  static getRandomInt(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  /**\r\n   * Добавляет нули в начало текста, например 12 будет приобразованно в 000012\r\n   * @param text - текст для преобразования\r\n   */\r\n  static getFilledZeroText(text = '') {\r\n    const defaultString = '000000';\r\n    const size = text.length;\r\n    const max = defaultString.length;\r\n\r\n    return `${defaultString.substring(0, max - size)}${text}`;\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import AudioManager from './AudioManager';\r\nimport GameManager from './GameManager';\r\nimport Mediator from '../helpers/Mediator';\r\nimport Utils from '../helpers/Utils';\r\nimport { HelperList, GameScore, ResultBlocks, ResultBlocksButton } from '../interfaces';\r\n\r\nconst mediator = Mediator.getInstance();\r\n\r\nclass UIManager {\r\n  private static instance: UIManager; // Экземпляр класса\r\n  private audioManager: AudioManager; // Аудио менеджер\r\n  private uiManagerMenu: UIManagerMenu; // Менеджер для главного меню\r\n  private uiManagerScore: UIManagerScore; // Менеджер для вывода очков игры\r\n  private uiManagerResult: UIManagerResult; // Менеджер для вывода результата игры\r\n  private uiManagerHelper: UIManagerHelper; // Менеджер для вывода подсказок управления\r\n  private uiActiveClass = 'is-active'; // Класс для взаимодействия с ui\r\n\r\n  private constructor() {\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Доступ к экземпляру класса\r\n   */\r\n  public static getInstance(): UIManager {\r\n    if (!UIManager.instance) {\r\n      UIManager.instance = new UIManager();\r\n    }\r\n\r\n    return UIManager.instance;\r\n  }\r\n\r\n  /**\r\n   * Инициализация менеджера\r\n   * @private\r\n   */\r\n  private init(): void {\r\n    this.audioManager = new AudioManager();\r\n    this.uiManagerMenu = new UIManagerMenu(this.audioManager, this.uiActiveClass);\r\n    this.uiManagerScore = new UIManagerScore();\r\n    this.uiManagerResult = new UIManagerResult(this.audioManager, this.uiActiveClass);\r\n    this.uiManagerHelper = new UIManagerHelper();\r\n  }\r\n\r\n  /**\r\n   * Добавляет список игр в главное меню\r\n   * @param wrapper\r\n   * @param menuButtons\r\n   */\r\n  public setMenuItems(wrapper: HTMLElement, menuButtons: Array<string>) {\r\n    this.uiManagerMenu.createMenuButtons(wrapper, menuButtons);\r\n  }\r\n\r\n  /**\r\n   * Устанавливает блоки для вывода очков игры\r\n   * @param currentWrapper\r\n   * @param maxWrapper\r\n   */\r\n  public setScoreItems(currentWrapper: HTMLElement, maxWrapper: HTMLElement) {\r\n    this.uiManagerScore.setBlocks(currentWrapper, maxWrapper);\r\n  }\r\n\r\n  /**\r\n   * Устанавливает блоки для вывода результата игры\r\n   * @param blocks\r\n   */\r\n  public setResultBlocks(blocks: ResultBlocks) {\r\n    this.uiManagerResult.setBlocks(blocks);\r\n  }\r\n\r\n  /**\r\n   * Сообщает uiManagerResult что нужно вывести результат игры\r\n   * @param result\r\n   * @param score\r\n   */\r\n  public setResult(result: string, score: number) {\r\n    this.uiManagerResult.updateResult(result, score);\r\n  }\r\n\r\n  /**\r\n   * Запускает музыку главного меню\r\n   */\r\n  public playMusic() {\r\n    this.uiManagerMenu.playMusic();\r\n  }\r\n\r\n  /**\r\n   * Устанавливает блок для вывода подсказок управления\r\n   * @param helperBlock\r\n   */\r\n  public setHelperBlock(helperBlock: HTMLElement) {\r\n    this.uiManagerHelper.setWrapper(helperBlock);\r\n  }\r\n\r\n  /**\r\n   * Сообщает uiManagerHelper что нужно обновить список подсказок\r\n   * @param helperList\r\n   */\r\n  public updateHelperList(helperList: Array<HelperList>) {\r\n    this.uiManagerHelper.updateHelperList(helperList);\r\n  }\r\n\r\n  /**\r\n   * Сообщает uiManagerHelper что нужно установить подсказки по умолчанию\r\n   */\r\n  public setDefaultHelperList() {\r\n    this.uiManagerHelper.setDefaultList();\r\n  }\r\n}\r\n\r\nclass UIManagerMenu {\r\n  private audioManager: AudioManager; // Аудио менеджер\r\n  private menuButtons: Array<HTMLElement> = []; // Кнопки меню\r\n  private activeIndex = 0; // Индекс текущей активной кнопки\r\n  private activeClass: string; // Класс для подсветки активного пункта меню\r\n\r\n  constructor(audioManager: AudioManager, activeClass: string) {\r\n    this.activeClass = activeClass;\r\n\r\n    this.initAudioManager(audioManager);\r\n    this.bindEvents();\r\n  }\r\n\r\n  public createMenuButtons(wrapper: HTMLElement, menuButtons: Array<string>) {\r\n    if (!wrapper || !menuButtons.length) {\r\n      return;\r\n    }\r\n\r\n    menuButtons.forEach((button, index) => {\r\n      const elem = document.createElement('button');\r\n      const elemText = document.createTextNode(button);\r\n\r\n      elem.appendChild(elemText);\r\n\r\n      if (index === 0) {\r\n        elem.className = this.activeClass;\r\n        this.activeIndex = 0;\r\n      }\r\n\r\n      wrapper.appendChild(elem);\r\n\r\n      this.menuButtons.push(elem);\r\n    });\r\n  }\r\n\r\n  public playMusic() {\r\n    if (this.audioManager) {\r\n      this.audioManager.musicPlay('menu');\r\n    }\r\n  }\r\n\r\n  private initAudioManager(audioManager: AudioManager) {\r\n    const musicList = [\r\n      { name: 'menu', file: 'menu.mp3', loop: true, volume: 0.3 },\r\n      { name: 'button', file: 'button.mp3', loop: false },\r\n      { name: 'enter', file: 'enter.mp3', loop: false }\r\n    ];\r\n\r\n    this.audioManager = audioManager;\r\n    this.audioManager.addMusicList(musicList);\r\n    this.playMusic();\r\n  }\r\n\r\n  private changeActiveClassMenuButtons(direction: string) {\r\n    if (direction === 'up') {\r\n      this.activeIndex =\r\n        this.activeIndex === 0\r\n          ? this.menuButtons.length - 1\r\n          : this.activeIndex - 1;\r\n    } else {\r\n      this.activeIndex =\r\n        this.activeIndex === this.menuButtons.length - 1\r\n          ? 0\r\n          : this.activeIndex + 1;\r\n    }\r\n\r\n    this.audioManager.musicPlay('button');\r\n\r\n    this.menuButtons.forEach((button, index) => {\r\n      const method = index === this.activeIndex ? 'add' : 'remove';\r\n\r\n      button.classList[method](this.activeClass);\r\n    });\r\n  }\r\n\r\n  private bindEvents() {\r\n    document.addEventListener('keydown', (event) => {\r\n      switch (event.code) {\r\n        case 'ArrowUp':\r\n          if (GameManager.stage !== 'menu') {\r\n            return;\r\n          }\r\n\r\n          this.changeActiveClassMenuButtons('up');\r\n\r\n          break;\r\n        case 'ArrowDown':\r\n          if (GameManager.stage !== 'menu') {\r\n            return;\r\n          }\r\n\r\n          this.changeActiveClassMenuButtons('down');\r\n\r\n          break;\r\n        case 'Enter':\r\n          if (GameManager.stage !== 'menu') {\r\n            return;\r\n          }\r\n\r\n          this.audioManager.musicStop('menu');\r\n          this.audioManager.musicPlay('enter');\r\n          mediator.publish('menu:enter', this.activeIndex);\r\n\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nclass UIManagerScore {\r\n  private current: HTMLElement;\r\n  private max: HTMLElement;\r\n\r\n  constructor() {\r\n    this.subscribes();\r\n  }\r\n\r\n  setBlocks(current: HTMLElement, max: HTMLElement) {\r\n    this.current = current;\r\n    this.max = max;\r\n  }\r\n\r\n  private subscribes() {\r\n    mediator.subscribe('store:update', (obj: GameScore) => {\r\n      if (GameManager.stage === 'menu') {\r\n        return;\r\n      }\r\n\r\n      const { current, max } = obj;\r\n\r\n      this.current.innerText = Utils.getFilledZeroText(current.toString());\r\n      this.max.innerText = Utils.getFilledZeroText(max.toString());\r\n    });\r\n  }\r\n}\r\n\r\nclass UIManagerResult {\r\n  private audioManager: AudioManager;\r\n  private textWrapper: HTMLElement;\r\n  private scoreWrapper: HTMLElement;\r\n  private buttons: Array<ResultBlocksButton>;\r\n  private activeIndex = 0;\r\n  private activeClass: string;\r\n\r\n  constructor(audioManager: AudioManager, activeClass: string) {\r\n    this.activeClass = activeClass;\r\n\r\n    this.initAudioManager(audioManager);\r\n    this.bindEvents();\r\n  }\r\n\r\n  public setBlocks(blocks: ResultBlocks) {\r\n    this.textWrapper = blocks.textWrapper;\r\n    this.scoreWrapper = blocks.scoreWrapper;\r\n    this.buttons = blocks.buttons;\r\n\r\n    if (this.buttons.length) {\r\n      this.buttons[this.activeIndex].element.classList.add('is-active');\r\n    }\r\n  }\r\n\r\n  public updateResult(result: string, score: number) {\r\n    this.textWrapper.innerText = result === 'win' ? 'YOU WIN!' : 'GAME OVER';\r\n    this.scoreWrapper.innerText = Utils.getFilledZeroText(score.toString());\r\n  }\r\n\r\n  private initAudioManager(audioManager: AudioManager) {\r\n    const musicList = [\r\n      { name: 'button', file: 'button.mp3', loop: false },\r\n      { name: 'enter', file: 'enter.mp3', loop: false }\r\n    ];\r\n\r\n    this.audioManager = audioManager;\r\n    this.audioManager.addMusicList(musicList);\r\n  }\r\n\r\n  private changeActiveClassMenuButtons(direction: string) {\r\n    if (direction === 'up') {\r\n      this.activeIndex =\r\n        this.activeIndex === 0\r\n          ? this.buttons.length - 1\r\n          : this.activeIndex - 1;\r\n    } else {\r\n      this.activeIndex =\r\n        this.activeIndex === this.buttons.length - 1\r\n          ? 0\r\n          : this.activeIndex + 1;\r\n    }\r\n\r\n    this.audioManager.musicPlay('button');\r\n\r\n    this.buttons.forEach((button, index) => {\r\n      const method = index === this.activeIndex ? 'add' : 'remove';\r\n\r\n      button.element.classList[method](this.activeClass);\r\n    });\r\n  }\r\n\r\n  private bindEvents() {\r\n    document.addEventListener('keydown', (event) => {\r\n      switch (event.code) {\r\n        case 'ArrowUp':\r\n          if (GameManager.stage === 'win' || GameManager.stage === 'lose') {\r\n            this.changeActiveClassMenuButtons('up');\r\n          }\r\n\r\n          break;\r\n        case 'ArrowDown':\r\n          if (GameManager.stage === 'win' || GameManager.stage === 'lose') {\r\n            this.changeActiveClassMenuButtons('down');\r\n          }\r\n\r\n          break;\r\n        case 'Enter':\r\n          if (GameManager.stage === 'win' || GameManager.stage === 'lose') {\r\n            const eventName = this.buttons[this.activeIndex].eventName;\r\n\r\n            this.audioManager.musicPlay('enter');\r\n            mediator.publish(`game:${eventName}`);\r\n          }\r\n\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nclass UIManagerHelper {\r\n  private wrapper: HTMLElement;\r\n  private list: Array<HelperList>;\r\n\r\n  public setWrapper(wrapper: HTMLElement) {\r\n    this.wrapper = wrapper;\r\n  }\r\n\r\n  public updateHelperList(list: Array<HelperList>) {\r\n    this.list = list;\r\n    this.showList();\r\n  }\r\n\r\n  public setDefaultList() {\r\n    this.list = [\r\n      { key: 'arrow up &uarr;', description: 'Листать вверх' },\r\n      { key: 'arrow down &darr;', description: 'Листать вниз' },\r\n      { key: 'enter', description: 'Запустить игру' }\r\n    ];\r\n    this.showList();\r\n  }\r\n\r\n  private showList() {\r\n    this.wrapper.innerHTML = '';\r\n    let text = '';\r\n\r\n    this.list.forEach((item) => {\r\n      text += `<li>${item.key}</li><li>${item.description}</li>`\r\n    });\r\n\r\n    this.wrapper.innerHTML = text;\r\n  }\r\n}\r\n\r\nexport default UIManager;\r\n","import { InterfaceBlock } from '../interfaces';\r\nimport { blockName } from '../types';\r\n\r\nclass VisibilityManager {\r\n  private static instance: VisibilityManager; // Экземпляр класса\r\n  private blocks: Array<InterfaceBlock>; // Список блоков которые скрываем/показываем\r\n  private visibilityClass = 'is-active'; // Класс добавляемый блоку для видимости\r\n\r\n  /**\r\n   * Доступом к экземпляру\r\n   */\r\n  public static getInstance(): VisibilityManager {\r\n    if (!VisibilityManager.instance) {\r\n      VisibilityManager.instance = new VisibilityManager();\r\n    }\r\n\r\n    return VisibilityManager.instance;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает список блоков с которыми будет взаимодействовать класс\r\n   * @param blocks\r\n   */\r\n  public setBlocks(blocks: Array<InterfaceBlock>) {\r\n    this.blocks = blocks;\r\n  }\r\n\r\n  /**\r\n   * Скрывает блоки\r\n   * @param names - список блоков которые скрываем\r\n   */\r\n  public hideBlocks(names: Array<blockName>) {\r\n    names.forEach((name) => {\r\n      const block = this.blocks.find((item) => item.name === name);\r\n\r\n      if (!block) {\r\n        return;\r\n      }\r\n\r\n      block.element.classList.remove(this.visibilityClass);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает блоки\r\n   * @param names - список блоков которые показываем\r\n   */\r\n  public showBlocks(names: Array<blockName>) {\r\n    names.forEach((name) => {\r\n      const block = this.blocks.find((item) => item.name === name);\r\n\r\n      if (!block) {\r\n        return;\r\n      }\r\n\r\n      block.element.classList.add(this.visibilityClass);\r\n    });\r\n  }\r\n}\r\n\r\nexport default VisibilityManager;\r\n","import UIManager from './UIManager';\r\nimport VisibilityManager from './VisibilityManager';\r\nimport Mediator from '../helpers/Mediator';\r\nimport { GameObject, InterfaceBlock, ResultBlocksButton } from '../interfaces';\r\nimport { stage } from '../types';\r\n\r\nconst mediator = Mediator.getInstance();\r\n\r\nclass GameManager {\r\n  private static instance: GameManager; // Экземпляр класса\r\n  public static stage: stage = 'menu'; // Текущее состояние менеджера\r\n  private visibilityManager: VisibilityManager; // Менеджер видимости html-блоков\r\n  private uiManager: UIManager; // Менеджер для взаимодействия с ui\r\n  private activeGame: GameObject; // Текущая активная игра\r\n  private readonly gamesList: Array<GameObject>; // Список всех игр\r\n\r\n  // HTML-блоки для uiManager и visibilityManager\r\n  private gameWrapper: HTMLElement;\r\n  private menuWrapper: HTMLElement;\r\n  private statusWrapper: HTMLElement;\r\n  private scoreWrapper: HTMLElement;\r\n  private scoreCurrentWrapper: HTMLElement;\r\n  private scoreMaxWrapper: HTMLElement;\r\n  private resultTextWrapper: HTMLElement;\r\n  private resultScoreWrapper: HTMLElement;\r\n  private resultButtonRestart: HTMLElement;\r\n  private resultButtonExit: HTMLElement;\r\n  private gameHelper: HTMLElement;\r\n\r\n  private constructor(games: Array<GameObject>) {\r\n    this.gamesList = games;\r\n\r\n    this.getElements();\r\n    this.subscribes();\r\n    this.initUIManager();\r\n    this.initVisibilityManager();\r\n  }\r\n\r\n  /**\r\n   * Инициализация менеджера\r\n   * @param games\r\n   */\r\n  public static init(games: Array<GameObject>) {\r\n    if (!GameManager.instance) {\r\n      GameManager.instance = new GameManager(games);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет текущее состояние менеджера и показываем/скрывает нужные блоки\r\n   * в зависимости от состояния\r\n   * @param stage\r\n   */\r\n  public updateStage(stage: stage) {\r\n    GameManager.stage = stage;\r\n\r\n    switch (GameManager.stage) {\r\n      case 'menu':\r\n        this.visibilityManager.hideBlocks(['game', 'status', 'score']);\r\n        this.visibilityManager.showBlocks(['menu']);\r\n        break;\r\n      case 'game':\r\n        this.visibilityManager.hideBlocks(['menu', 'status']);\r\n        this.visibilityManager.showBlocks(['game', 'score']);\r\n        break;\r\n      case 'win':\r\n      case 'lose':\r\n        this.visibilityManager.showBlocks(['status']);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает HTML-блоки\r\n   * @private\r\n   */\r\n  private getElements() {\r\n    this.gameWrapper = document.getElementById('game');\r\n    this.menuWrapper = document.getElementById('game-menu');\r\n    this.statusWrapper = document.getElementById('game-status');\r\n    this.scoreWrapper = document.getElementById('game-score');\r\n    this.scoreCurrentWrapper = document.getElementById('game-score-current');\r\n    this.scoreMaxWrapper = document.getElementById('game-score-max');\r\n    this.resultTextWrapper = document.getElementById('game-status-text');\r\n    this.resultScoreWrapper = document.getElementById('game-status-score');\r\n    this.resultButtonRestart = document.getElementById('game-status-restart');\r\n    this.resultButtonExit = document.getElementById('game-status-exit');\r\n    this.gameHelper = document.getElementById('game-helper');\r\n  }\r\n\r\n  /**\r\n   * Инициализирует UI-менеджер\r\n   * @private\r\n   */\r\n  private initUIManager() {\r\n    const buttons = this.gamesList.map((item) => item.name);\r\n    const buttonsResult: Array<ResultBlocksButton> = [\r\n      { eventName: 'restart', element: this.resultButtonRestart },\r\n      { eventName: 'exit', element: this.resultButtonExit }\r\n    ];\r\n\r\n    this.uiManager = UIManager.getInstance();\r\n    this.uiManager.setMenuItems(this.menuWrapper, buttons);\r\n    this.uiManager.setScoreItems(this.scoreCurrentWrapper, this.scoreMaxWrapper);\r\n    this.uiManager.setResultBlocks({\r\n      textWrapper: this.resultTextWrapper,\r\n      scoreWrapper: this.resultScoreWrapper,\r\n      buttons: buttonsResult\r\n    });\r\n    this.uiManager.setHelperBlock(this.gameHelper);\r\n    this.uiManager.setDefaultHelperList();\r\n  }\r\n\r\n  /**\r\n   * Инициализирует менеджер видимости блоков\r\n   * @private\r\n   */\r\n  private initVisibilityManager() {\r\n    const blocks: Array<InterfaceBlock> = [\r\n      { name: 'game', element: this.gameWrapper },\r\n      { name: 'menu', element: this.menuWrapper },\r\n      { name: 'status', element: this.statusWrapper },\r\n      { name: 'score', element: this.scoreWrapper }\r\n    ];\r\n\r\n    this.visibilityManager = VisibilityManager.getInstance();\r\n    this.visibilityManager.setBlocks(blocks);\r\n  }\r\n\r\n  /**\r\n   * Инициализация подписчиков на события через mediator\r\n   * @private\r\n   */\r\n  private subscribes() {\r\n    mediator.subscribe('menu:enter', (index: number) => {\r\n      this.activeGame = this.gamesList[index];\r\n\r\n      if (!this.activeGame?.game) {\r\n        return;\r\n      }\r\n\r\n      this.updateStage('game');\r\n      this.activeGame.game.init();\r\n\r\n      if (this.activeGame.helper) {\r\n        this.uiManager.updateHelperList(this.activeGame.helper);\r\n      }\r\n    });\r\n\r\n    mediator.subscribe('game:lose', (score: number) => {\r\n      this.updateStage('lose');\r\n      this.uiManager.setResult('lose', score);\r\n    });\r\n\r\n    mediator.subscribe('game:win', (score: number) => {\r\n      this.updateStage('win');\r\n      this.uiManager.setResult('win', score);\r\n    });\r\n\r\n    mediator.subscribe('game:restart', () => {\r\n      this.updateStage('game');\r\n      this.activeGame.game.start();\r\n    });\r\n\r\n    mediator.subscribe('game:exit', () => {\r\n      if (this.activeGame?.game) {\r\n        this.activeGame.game.stop();\r\n      }\r\n\r\n      this.updateStage('menu');\r\n      this.uiManager.playMusic();\r\n      this.uiManager.setDefaultHelperList();\r\n    });\r\n  }\r\n}\r\n\r\nexport default GameManager;\r\n","import Mediator from '../helpers/Mediator';\r\n\r\nconst mediator = Mediator.getInstance();\r\n\r\nclass StoreManager {\r\n  private readonly gameName: string; // Название игры для поиска сохраннёных данных\r\n  private currentValue = 0; // Текущее кол-во очков в игре\r\n  private maxValue = 0; // Максимальное кол-во очков в игре\r\n\r\n  constructor(name: string) {\r\n    this.gameName = name;\r\n    this.initStore();\r\n    this.publishStoreValue();\r\n  }\r\n\r\n  /**\r\n   * Инициализирует хранилище, получает максимальное значение из localStorage\r\n   * @private\r\n   */\r\n  private initStore() {\r\n    this.currentValue = 0;\r\n    this.maxValue = Number(localStorage.getItem(`${this.gameName}-max`)) || 0;\r\n  }\r\n\r\n  /**\r\n   * Обновляет текущее значение в хранилище\r\n   * @param value\r\n   */\r\n  public updateCurrentValue(value: number) {\r\n    this.currentValue = value;\r\n\r\n    // Если текущее значение больше максимального, то обновляем и сохраняем максимальное значение\r\n    if (value > this.maxValue) {\r\n      this.maxValue = value;\r\n      localStorage.setItem(`${this.gameName}-max`, value.toString());\r\n    }\r\n\r\n    this.publishStoreValue();\r\n  }\r\n\r\n  /**\r\n   * Сообщает через медиатор, что значение обновленно\r\n   * @private\r\n   */\r\n  private publishStoreValue() {\r\n    mediator.publish('store:update',  {\r\n      current: this.currentValue,\r\n      max: this.maxValue\r\n    });\r\n  }\r\n}\r\n\r\nexport default StoreManager;\r\n","import AudioManager from '../managers/AudioManager';\r\nimport StoreManager from '../managers/StoreManager';\r\nimport Mediator from '../helpers/Mediator';\r\n\r\nconst mediator = Mediator.getInstance();\r\n\r\nclass DefaultGame {\r\n  audioManager: AudioManager; // Аудио менеджер\r\n  storeManager: StoreManager; // Хранилище очков\r\n  canvas: HTMLCanvasElement; // Html элемент канваса\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  score = 0; // Кол-во набранных очков\r\n  gameOver = false; // Закончена ли игра\r\n  eventsKeyDownFunction: () => void; // Фунция для евентов\r\n\r\n  /**\r\n   * Инициализация игры и зависимостей\r\n   */\r\n  init() {\r\n    this.initManagers();\r\n    this.initElements();\r\n    this.initEvents();\r\n    this.bindEvents();\r\n    this.start();\r\n  }\r\n\r\n  /**\r\n   * Запуск игры\r\n   */\r\n  start() {\r\n    this.setDefaultValues();\r\n    requestAnimationFrame(this.update.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Останавливает игру\r\n   */\r\n  stop() {\r\n    this.removeEvents();\r\n    this.gameOver = true;\r\n  }\r\n\r\n  /**\r\n   * Логика игры\r\n   */\r\n  update() {\r\n    if (this.gameOver) {\r\n      return;\r\n    }\r\n\r\n    requestAnimationFrame(this.update.bind(this));\r\n\r\n    // Здесь методы вызов метода отрисовки и логики игры\r\n  }\r\n\r\n  /**\r\n   * Выполняет действия при подебе/проигрыше\r\n   */\r\n  changeStatusGame(status: string, music: string) {\r\n    this.audioManager.musicStop(music);\r\n    this.gameOver = true;\r\n\r\n    if (status === 'lose') {\r\n      this.audioManager.musicPlay('lose');\r\n      mediator.publish('game:lose', this.score);\r\n    } else {\r\n      this.audioManager.musicPlay('win');\r\n      mediator.publish('game:win', this.score);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализация менеджеров\r\n   */\r\n  initManagers(game?: string) {\r\n    this.audioManager = new AudioManager();\r\n\r\n    if (game) {\r\n      this.storeManager = new StoreManager(game);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализация элементов игры\r\n   */\r\n  initElements() {\r\n    this.canvas = <HTMLCanvasElement>document.getElementById('game');\r\n    this.context = this.canvas.getContext('2d');\r\n  }\r\n\r\n  /**\r\n   * Регистрирует функцию привязывая контекст, для обработкой эвентов клика\r\n   */\r\n  initEvents() {\r\n    this.eventsKeyDownFunction = this.eventsKeyDown.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Навешивает обработчики событий\r\n   */\r\n  bindEvents() {\r\n    document.addEventListener('keydown', this.eventsKeyDownFunction);\r\n  }\r\n\r\n  /**\r\n   * Удаляет обработчики событий\r\n   */\r\n  removeEvents() {\r\n    document.removeEventListener('keydown', this.eventsKeyDownFunction);\r\n  }\r\n\r\n  /**\r\n   * Обработчик событий нажатия кнопок\r\n   */\r\n  eventsKeyDown() {\r\n    // Необходимо заполнить в дочернем классе\r\n  }\r\n\r\n  /**\r\n   * Устанавливает значения по умолчанию\r\n   */\r\n  setDefaultValues() {\r\n    this.gameOver = false;\r\n    this.score = 0;\r\n\r\n    this.storeManager.updateCurrentValue(this.score);\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n}\r\n\r\nexport default DefaultGame;\r\n","// Interfaces\r\nimport { Cell, CanvasSize, SnakeOptions } from '../../interfaces/games/snake';\r\n\r\nclass Snake {\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  canvasSize: CanvasSize; // Размер канваса\r\n  x = 200; // Начальная координата по Х\r\n  y = 200; // Начальная координата по Y\r\n  dx = 20; // Скорость змейки по Х\r\n  dy = 0; // Скорость змейки по Y\r\n  cells: Array<Cell> = []; // Ячейки змейки\r\n  cellsCount = 4; // Стартовая длина змейки — 4 клеточки\r\n  color: string; // Цвет змейки\r\n  defaultColor = 'green'; // Цвет змейки по умолчанию\r\n  cellSize: number; // Размер ячейки змейки\r\n\r\n  constructor(options: SnakeOptions) {\r\n    this.context = options.context;\r\n    this.canvasSize = options.size;\r\n    this.cellSize = options.grid;\r\n    this.color = options.color || this.defaultColor;\r\n\r\n    this.dx = this.cellSize;\r\n    this.x = this.cellSize * 10;\r\n    this.y = this.cellSize * 10;\r\n  }\r\n\r\n  /**\r\n   * Задаём стартовые параметры основным переменным\r\n   */\r\n  setDefaultValues() {\r\n    this.x = this.cellSize * 10;\r\n    this.y = this.cellSize * 10;\r\n    this.cells = [];\r\n    this.cellsCount = 4;\r\n    this.dx = this.cellSize;\r\n    this.dy = 0;\r\n  }\r\n\r\n  /**\r\n   * Изменяем позицию змейки\r\n   */\r\n  draw() {\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    this.checkOutsideX();\r\n    this.checkOutsideY();\r\n    this.move();\r\n    this.drawSnake();\r\n  }\r\n\r\n  /**\r\n   * Рисуем змейку\r\n   */\r\n  drawSnake() {\r\n    this.context.fillStyle = this.color;\r\n\r\n    // Рисуем каждую ячейку змейки\r\n    this.cells.forEach((cell) => {\r\n      this.context.fillRect(cell.x, cell.y, this.cellSize - 1, this.cellSize - 1);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Увеличивает длину змейки\r\n   */\r\n  addLengthSnake() {\r\n    this.cellsCount++;\r\n  }\r\n\r\n  /**\r\n   * Изменяет цвет змейки\r\n   * @param color\r\n   */\r\n  changeColor(color: string) {\r\n    this.color = color;\r\n  }\r\n\r\n  /**\r\n   * Изменяет направление движения змейки\r\n   * @param dx\r\n   * @param dy\r\n   */\r\n  setDirection(dx: number, dy: number) {\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n  }\r\n\r\n  /**\r\n   * Возвращает текущее направление змейки\r\n   */\r\n  getDirection() {\r\n    return {\r\n      dx: this.dx,\r\n      dy: this.dy,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Если змейка достигла края поля по горизонтали — продолжаем её движение с противоположной стороны\r\n   */\r\n  private checkOutsideX() {\r\n    if (this.x < 0) {\r\n      this.x = this.canvasSize.width - this.cellSize;\r\n    } else if (this.x >= this.canvasSize.width) {\r\n      this.x = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Если змейка достигла края поля по вертикали — продолжаем её движение с противоположной стороны\r\n   */\r\n  private checkOutsideY() {\r\n    if (this.y < 0) {\r\n      this.y = this.canvasSize.height - this.cellSize;\r\n    } else if (this.y >= this.canvasSize.height) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Двигаем змейку\r\n   * путём добавления в начало массива новой ячейки\r\n   * и удаления последнего элемента из массива\r\n   */\r\n  private move() {\r\n    this.cells.unshift({ x: this.x, y: this.y });\r\n\r\n    if (this.cells.length > this.cellsCount) {\r\n      this.cells.pop();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Snake;\r\n","// Helpers\r\nimport Utils from '../../helpers/Utils';\r\n\r\n// Interfaces\r\nimport { Cell, FoodOptions } from '../../interfaces/games/snake';\r\n\r\nclass Food {\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  x = 0; // Начальная координата еды по X\r\n  y = 0; // Начальная координата еды по Y\r\n  color: string; // Цвет еды\r\n  defaultColor = 'red'; // Цвет еды по умолчанию\r\n  foodSize: number; // Размер ячейки еды\r\n  cellCountX: number; // Количество ячеек где можем разместить еду по x\r\n  cellCountY: number; // Количество ячеек где можем разместить еду по y\r\n\r\n  constructor(options: FoodOptions) {\r\n    this.context = options.context;\r\n    this.foodSize = options.grid;\r\n    this.color = options.color || this.defaultColor;\r\n    this.x = this.foodSize;\r\n    this.y = this.foodSize;\r\n    this.cellCountX = Math.floor(options.size.width / this.foodSize);\r\n    this.cellCountY = Math.floor(options.size.height / this.foodSize);\r\n  }\r\n\r\n  /**\r\n   * Рисует еду\r\n   */\r\n  draw() {\r\n    this.context.fillStyle = this.color;\r\n    this.context.fillRect(this.x, this.y, this.foodSize - 1, this.foodSize - 1);\r\n  }\r\n\r\n  /**\r\n   * Задаём рандомную позицию еде\r\n   */\r\n  setRandomPosition(snakeCells: Array<Cell>) {\r\n    const randomX = Utils.getRandomInt(0, this.cellCountX) * this.foodSize;\r\n    const randomY = Utils.getRandomInt(0, this.cellCountY) * this.foodSize;\r\n\r\n    // Проверяем, не совпадает ли новая позиция с ячейкой занимаемой змейков\r\n    // Если совпадает, повторно задаём позицию\r\n    for (let i = 0; i < snakeCells.length; i++) {\r\n      if (snakeCells[i].x === randomX && snakeCells[i].y === randomY) {\r\n        this.setRandomPosition(snakeCells);\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.x = randomX;\r\n    this.y = randomY;\r\n  }\r\n}\r\n\r\nexport default Food;\r\n","// Helpers\r\nimport DefaultGame from '../../abstracts/DefaultGame';\r\nimport Mediator from '../../helpers/Mediator';\r\n\r\n// Game elements\r\nimport Snake from './Snake';\r\nimport Food from './Food';\r\n\r\n// Custom\r\nconst mediator = Mediator.getInstance();\r\n\r\nclass Game extends DefaultGame {\r\n  snake: Snake; // Экземпляр змейки\r\n  food: Food; // Экземпляр еды\r\n  grid = 20; // Размер одной клеточки на поле\r\n  countAnimationFrame = 0; // Техническая переменная для ограничения скорости змейки\r\n  slowing = 20; // Размер замедления змейки, чем больше значение тем она медленнее, чем меньше, тем быстрее\r\n  maxCells: number; // Кол-во очков для победы\r\n\r\n  /**\r\n   * Останавливает игру\r\n   */\r\n  stop() {\r\n    super.stop();\r\n    this.audioManager.musicStop('snake');\r\n  }\r\n\r\n  /**\r\n   * Логика игры\r\n   */\r\n  update() {\r\n    super.update();\r\n\r\n    if (++this.countAnimationFrame < this.slowing) {\r\n      return;\r\n    }\r\n\r\n    // Обнуляем переменную скорости\r\n    this.countAnimationFrame = 0;\r\n\r\n    this.draw();\r\n\r\n    this.snake.cells.forEach((cell, index) => {\r\n      // Если змейка добралась до еды\r\n      if (cell.x === this.food.x && cell.y === this.food.y) {\r\n        // увеличиваем длину змейки\r\n        this.snake.addLengthSnake();\r\n\r\n        this.audioManager.musicPlay('food');\r\n        this.score++;\r\n        this.storeManager.updateCurrentValue(this.score);\r\n\r\n        if (this.isWin()) {\r\n          this.changeStatusGame('win');\r\n        } else {\r\n          this.food.setRandomPosition(this.snake.cells);\r\n        }\r\n\r\n        if (this.slowing > 8) {\r\n          this.slowing -= 0.1;\r\n        }\r\n      }\r\n\r\n      // Проверяем, не столкнулась ли змея сама с собой\r\n      for (let i = index + 1; i < this.snake.cells.length; i++) {\r\n        if (cell.x === this.snake.cells[i].x && cell.y === this.snake.cells[i].y) {\r\n          this.snake.changeColor('orange');\r\n          this.snake.drawSnake();\r\n          this.changeStatusGame('lose');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Выполняет действия при подебе/проигрыше\r\n   */\r\n  changeStatusGame(status: string) {\r\n    super.changeStatusGame(status, 'snake');\r\n  }\r\n\r\n  /**\r\n   * Отрисовка игры\r\n   */\r\n  draw() {\r\n    // Очищаем игровое поле\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    // Рисуем еду\r\n    this.food.draw();\r\n\r\n    // Рисуем змейку\r\n    this.snake.draw();\r\n  }\r\n\r\n  /**\r\n   * Устанавливает начальные значения для игры\r\n   * @private\r\n   */\r\n  setDefaultValues() {\r\n    super.setDefaultValues();\r\n\r\n    this.countAnimationFrame = 0;\r\n    this.slowing = 20;\r\n\r\n    this.snake.changeColor('green');\r\n    this.snake.setDefaultValues();\r\n    this.food.setRandomPosition(this.snake.cells);\r\n\r\n    this.audioManager.musicPlay('snake');\r\n  }\r\n\r\n  /**\r\n   * Инициализация менеджеров\r\n   */\r\n  initManagers() {\r\n    super.initManagers('snake');\r\n\r\n    const musicList = [\r\n      { name: 'snake', file: 'snake.mp3', loop: true, volume: 0.3 },\r\n      { name: 'food', file: 'food.mp3', loop: false },\r\n      { name: 'lose', file: 'lose.mp3', loop: false },\r\n      { name: 'win', file: 'win.mp3', loop: false },\r\n    ];\r\n\r\n    this.audioManager.addMusicList(musicList);\r\n  }\r\n\r\n  /**\r\n   * Инициализация элементов игры\r\n   */\r\n  initElements() {\r\n    super.initElements();\r\n\r\n    this.maxCells = Math.floor(this.canvas.width / this.grid) * Math.floor(this.canvas.height / this.grid);\r\n\r\n    const snakeProps = {\r\n      context: this.context,\r\n      grid: this.grid,\r\n      color: 'green',\r\n      size: {\r\n        width: this.canvas.width,\r\n        height: this.canvas.height\r\n      }\r\n    }\r\n    this.snake = new Snake(snakeProps);\r\n\r\n    const foodProps = {\r\n      ...snakeProps,\r\n      color: 'red'\r\n    }\r\n    this.food = new Food(foodProps);\r\n  }\r\n\r\n  /**\r\n   * Обработчик событий нажатия кнопок\r\n   * @param event\r\n   */\r\n  eventsKeyDown(event?: KeyboardEvent) {\r\n    if (event.code === 'Escape') {\r\n      mediator.publish('game:exit');\r\n      return;\r\n    }\r\n\r\n    const { dx, dy } = this.snake.getDirection();\r\n\r\n    switch (event.code) {\r\n    case 'ArrowLeft':\r\n      if (dx === 0) {\r\n        this.snake.setDirection(-this.grid, 0);\r\n      }\r\n\r\n      break;\r\n    case 'ArrowUp':\r\n      if (dy === 0) {\r\n        this.snake.setDirection(0, -this.grid);\r\n      }\r\n\r\n      break;\r\n    case 'ArrowRight':\r\n      if (dx === 0) {\r\n        this.snake.setDirection(this.grid, 0);\r\n      }\r\n\r\n      break;\r\n    case 'ArrowDown':\r\n      if (dy === 0) {\r\n        this.snake.setDirection(0, this.grid);\r\n      }\r\n\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Проверка на победу\r\n   * Если длина змейки равна кол-ву очков для победы, то игрок победил\r\n   * @private\r\n   */\r\n  private isWin() {\r\n    return this.snake.cells.length >= this.maxCells;\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","// Interfaces\r\nimport { PlatformOptions } from '../../interfaces/games/arkanoid';\r\n\r\nclass Platform {\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  canvasWidth: number; // Ширина канваса\r\n  x = 175; // Текущая позиция по Х\r\n  y = 409; // Текущая позиция по Y\r\n  maxSpeed = 6; // Максимальная скорость платформы\r\n  dx = 0; // Текущая скорость по x\r\n  width = 90; // Ширина платформы\r\n  height = 16; // Высота платформы\r\n  segmentCount = 8; // Кол-во отрезков на платформе\r\n  segmentsSizes: Array<number> = []; // Размеры отрезков на платфорем. Нужно для придания ускорения мячу\r\n  color: string; // Цвет платформы\r\n  defaultColor = 'blue'; // Цвет платформы по умолчанию\r\n\r\n  constructor(options: PlatformOptions) {\r\n    this.context = options.context;\r\n    this.canvasWidth = options.canvasWidth;\r\n    this.color = options?.color || this.defaultColor;\r\n\r\n    // Размер одного отрезка\r\n    const segmentSize = this.width / this.segmentCount;\r\n    // Кол-во отрезков. Так как ускорение для мяча семетрично относительно столкновения с левой или правой\r\n    // стороны платформы, то сокращаем segmentCount вдвое\r\n    const segmentSizesLength = Math.floor(this.segmentCount / 2);\r\n\r\n    for (let i = 1; i <= segmentSizesLength; i++) {\r\n      this.segmentsSizes.push(segmentSize * i);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Устанавливает стандартные значения платформы\r\n   */\r\n  public setDefaultValues() {\r\n    this.x = 175;\r\n    this.y = 409;\r\n  }\r\n\r\n  /**\r\n   * Рисует платформу\r\n   */\r\n  public draw() {\r\n    this.update();\r\n\r\n    this.context.fillStyle = 'blue';\r\n    this.context.fillRect(this.x, this.y, this.width, this.height);\r\n  }\r\n\r\n  /**\r\n   * Двигает платформу\r\n   */\r\n  public update() {\r\n    if (this.isOutside()) {\r\n      return;\r\n    }\r\n\r\n    this.x += this.dx;\r\n  }\r\n\r\n  /**\r\n   * Изменяет направление движения платформы\r\n   * @param direction - 1 вправо, -1 влево\r\n   */\r\n  public changeDirection(direction: number) {\r\n    this.dx = this.maxSpeed * direction;\r\n  }\r\n\r\n  /**\r\n   * Проверяет не упёрлась ли платформа в край канваса\r\n   * @private\r\n   */\r\n  private isOutside() {\r\n    const rightOutside = this.dx > 0 && this.x + this.width >= this.canvasWidth;\r\n    const leftOutside = this.dx < 0 && this.x <= 0;\r\n\r\n    return rightOutside || leftOutside;\r\n  }\r\n}\r\n\r\nexport default Platform;\r\n","// Game elements\r\nimport Platform from './Platform';\r\n\r\n// Interfaces\r\nimport { BallOptions, Block, CanvasSize } from '../../interfaces/games/arkanoid';\r\n\r\nclass Ball {\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  canvasSize: CanvasSize; // Размер холста\r\n  callbackLose: (status: string) => void; // Кэлбэк в случае проигрыша\r\n  x = 220; // Позиция мяча по X\r\n  y = 399; // Позиция мяча по Y\r\n  radius = 10; // Радиус мяча\r\n  minVelocityX = 1; // Минимальное ускорение мяча\r\n  maxVelocityX = 4; // Максимальное ускорение мяча\r\n  velocityX = 1; // Ускорение по оси x\r\n  velocityY = 2; // Ускорение по оси y\r\n  dx = 0; // Текущая скорость по x\r\n  dy = 0; // Текущая скорость по y\r\n  color: string; // Цвет мяча\r\n  defaultColor = 'green'; // Цвет мяча по умолчанию\r\n\r\n  constructor(options: BallOptions) {\r\n    this.context = options.context;\r\n    this.callbackLose = options.callbackLose;\r\n    this.color = options?.color || this.defaultColor;\r\n    this.canvasSize = options.canvasSize;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает значения по умолчанию\r\n   */\r\n  public setDefaultValues() {\r\n    this.x = 220;\r\n    this.y = 399;\r\n    this.velocityX = 1;\r\n    this.velocityY = 2;\r\n    this.dx = 0;\r\n    this.dy = 0;\r\n  }\r\n\r\n  /**\r\n   * Рисует мяч на холсте\r\n   */\r\n  public draw() {\r\n    this.context.fillStyle = this.color;\r\n    this.context.beginPath();\r\n    this.context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    this.context.closePath();\r\n    this.context.fill();\r\n  }\r\n\r\n  /**\r\n   * Проверка столкновений\r\n   * @param element\r\n   */\r\n  public checkCollision(element: Block | Platform) {\r\n    const { x, y } = this.getNextPosition();\r\n\r\n    return x < element.x + element.width &&\r\n      x + this.radius > element.x &&\r\n      y < element.y + element.height &&\r\n      y + this.radius > element.y;\r\n  }\r\n\r\n  /**\r\n   * Изменяет направление движения мяча по X\r\n   * @param direction - 1 - вправо, -1 влево\r\n   */\r\n  public setDirectionX(direction: number) {\r\n    this.dx = this.velocityX * direction;\r\n  }\r\n\r\n  /**\r\n   * Изменяет направление движения мяча по Y\r\n   * @param direction - 1 - вниз, -1 вверх\r\n   */\r\n  public setDirectionY(direction: number) {\r\n    this.dy = this.velocityY * direction;\r\n  }\r\n\r\n  /**\r\n   * Изменяет направление движения мяча по Y на противоположное текущему направлению\r\n   */\r\n  public revertDirectionY() {\r\n    this.dy = -this.dy;\r\n  }\r\n\r\n  /**\r\n   * Расчитывает скорость мяча по Х, в зависимости от удалённости от центра платформы\r\n   * @param platform\r\n   */\r\n  public checkVelocityX(platform: Platform) {\r\n    const { x } = this.getNextPosition(); // Позиция мяча при следующем фрейма\r\n    const centerPlatform = platform.x + platform.width / 2; // Центр платформы\r\n    const direction = x > centerPlatform ? 1 : -1; // Направление мяча после столкновения\r\n    const position = Math.abs(x - centerPlatform); // Растояние от мяча до центра платформы\r\n    const allSegmentsCount = platform.segmentsSizes.length; // Кол-во отрезков на платформе\r\n\r\n    // Если текущее расстояние до центра, меньше минимального отрезка платформы\r\n    // задаём минимальное ускорение мячу\r\n    const isMinVelocity = position <= platform.segmentsSizes[0];\r\n\r\n    if (isMinVelocity) {\r\n      this.velocityX = this.minVelocityX;\r\n      this.setDirectionX(direction);\r\n\r\n      return;\r\n    }\r\n\r\n    // Если текущее расстояние до центра, меньше или равно максимальному отрезку платформы\r\n    // и больше предшествующего отреза, задаём максимальное ускорение мячу\r\n    const isMaxVelocity = position > platform.segmentsSizes[allSegmentsCount - 2] &&\r\n      position <= platform.segmentsSizes[allSegmentsCount - 1];\r\n\r\n    if (isMaxVelocity) {\r\n      this.velocityX = this.maxVelocityX;\r\n      this.setDirectionX(direction);\r\n\r\n      return;\r\n    }\r\n\r\n    // Высчитываем размер ускорения\r\n    // 1. Берём разниму между минимальным и максимальным ускорением\r\n    // 2. Каждый сегмент это по факту отрезок имеющий начало и конец, где конец предыдущего будет началом следующего.\r\n    //    Поэтому вычитаем единицу из общего кол-ва сегментов.\r\n    // 3. Делим первое на второе, получаем размер прибавляемого ускорения, за каждый отрезок\r\n    const step = (this.maxVelocityX - this.minVelocityX) / (allSegmentsCount - 1);\r\n\r\n    // Проходим по всем сегментам\r\n    for (let i = 1; i < allSegmentsCount - 1; i++) {\r\n      // Если текущая позиция мяча, входит в отрезок текущего сегмента, то к минимальному ускорению\r\n      // добавляем шаг (размер ускорения) помноженного на индекс сегмента,\r\n      // ведь чем дальше сегмент, тем больше ускорение\r\n      if (position > platform.segmentsSizes[i - 1] && position <= platform.segmentsSizes[i]) {\r\n        this.velocityX = this.minVelocityX + (step * i);\r\n        this.setDirectionX(direction);\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Изменяет позицию мяча\r\n   */\r\n  public move() {\r\n    this.checkOutside();\r\n\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n  }\r\n\r\n  /**\r\n   * Центрируем элемент по оси X относительно платформы\r\n   * @param platformX\r\n   * @param platformWidth\r\n   */\r\n  public followForPlatform(platformX: number, platformWidth: number) {\r\n    this.x = platformX + (platformWidth / 2);\r\n  }\r\n\r\n  /**\r\n   * Проверка выхода за границы холста\r\n   * @private\r\n   */\r\n  private checkOutside() {\r\n    const { x, y } = this.getNextPosition();\r\n\r\n    if (x < 0) {\r\n      this.setDirectionX(1);\r\n    } else if (x + this.radius > 440) {\r\n      this.setDirectionX(-1);\r\n    }\r\n\r\n    if (y < 0) {\r\n      this.setDirectionY(1);\r\n    } else if (y + this.radius > 440) {\r\n      this.callbackLose('lose');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает следующую позицию мяча\r\n   * Это нужно чтобы при проверке столкновений использовалась следующая позиция мяча\r\n   * чтобы не было наложения мяча на другие элементы\r\n   * @private\r\n   */\r\n  private getNextPosition() {\r\n    return {\r\n      x: this.x + this.dx,\r\n      y: this.y + this.dy\r\n    }\r\n  }\r\n}\r\n\r\nexport default Ball;\r\n","// Interfaces\r\nimport { Block } from '../../interfaces/games/arkanoid';\r\n\r\nclass Blocks {\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  items: Array<Block> = []; // Массив блоков\r\n  width = 60; // Ширина одного блока\r\n  height = 16; // Высота одного блока\r\n  indent = 10; // Растояние между блоками\r\n  columns = 6; // Количество колонок\r\n  rows = 3; // Количество строк\r\n  offsetWindow = 15; // Растояние от края холста\r\n\r\n  constructor(context: CanvasRenderingContext2D) {\r\n    this.context = context;\r\n  }\r\n\r\n  /**\r\n   * Рисует блоки\r\n   */\r\n  public draw() {\r\n    this.items.forEach((item) => {\r\n      if (item.lives < 1) {\r\n        return;\r\n      }\r\n\r\n      this.context.fillStyle = item.color;\r\n\r\n      this.context.fillRect(item.x, item.y, item.width, item.height);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Метод для создания блоков в зависимости от уровня\r\n   */\r\n  public create(level: number) {\r\n    this.items = [];\r\n\r\n    switch (level) {\r\n      case 1:\r\n        this.createFirstLevel();\r\n        break;\r\n      case 2:\r\n        this.createSecondLevel();\r\n        break;\r\n      default:\r\n        this.createFirstLevel();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Создаёт блоки для 1-го уровня\r\n   * @private\r\n   */\r\n  private createFirstLevel() {\r\n    const colors = ['red', 'orange', 'yellow', 'yellow', 'orange', 'red']\r\n    this.rows = 3;\r\n\r\n    for (let row = 0; row < this.rows; row++) {\r\n      for (let column = 0; column < this.columns; column++) {\r\n        this.items.push({\r\n          x: (this.width + this.indent) * column + this.offsetWindow,\r\n          y: (this.height + this.indent) * row + this.offsetWindow,\r\n          width: this.width,\r\n          height: this.height,\r\n          color: colors[column],\r\n          lives: 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Создаёт блоки для 2-го уровня\r\n   * @private\r\n   */\r\n  private createSecondLevel() {\r\n    const colors = ['red', 'orange', 'yellow', 'gray']\r\n    const missColumns = [1, 4];\r\n    this.rows = 4;\r\n\r\n    for (let row = 0; row < this.rows; row++) {\r\n      for (let column = 0; column < this.columns; column++) {\r\n        if (missColumns.includes(column)) {\r\n          continue;\r\n        }\r\n\r\n        this.items.push({\r\n          x: (this.width + this.indent) * column + this.offsetWindow,\r\n          y: (this.height + this.indent) * row + this.offsetWindow,\r\n          width: this.width,\r\n          height: this.height,\r\n          color: colors[row],\r\n          lives: row === 3 ? 3 : 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Blocks;\r\n","// Managers\r\nimport DefaultGame from '../../abstracts/DefaultGame';\r\nimport Mediator from '../../helpers/Mediator';\r\n\r\n// Game elements\r\nimport Platform from './Platform';\r\nimport Ball from './Ball';\r\nimport Blocks from './Blocks';\r\n\r\n// Custom\r\nconst mediator = Mediator.getInstance();\r\n\r\nclass Game extends DefaultGame {\r\n  platform: Platform; // Экземпляр платформы\r\n  ball: Ball; // Экземпляр мяча\r\n  blocks: Blocks; // Экземпляр блоков\r\n\r\n  isBallOnPlatform = true; // Флаг, что мяч должен двигаться вместе с платформой\r\n  currentLevel = 1; // Текущий уровень игры\r\n  allLevelCount = 2; // Кол-во уровней\r\n  eventsUpFunction: () => void; // Фунция для евентов отпускания кнопок\r\n\r\n  /**\r\n   * Останавливает игру\r\n   */\r\n  stop() {\r\n    super.stop();\r\n    this.audioManager.musicStop('ark');\r\n  }\r\n\r\n  /**\r\n   * Выполняет действия при подебе/проигрыше\r\n   */\r\n  changeStatusGame(status: string) {\r\n    super.changeStatusGame(status, 'ark');\r\n  }\r\n\r\n  /**\r\n   * Логика игры\r\n   */\r\n  update() {\r\n    super.update();\r\n\r\n    if (this.isBallOnPlatform) {\r\n      this.ball.followForPlatform(this.platform.x, this.platform.width);\r\n    } else {\r\n      this.ball.move();\r\n      this.checkCollisionBlocks();\r\n      this.checkCollisionPlatform();\r\n    }\r\n\r\n    this.draw();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка игры\r\n   */\r\n  draw() {\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    this.platform.draw();\r\n    this.ball.draw();\r\n    this.blocks.draw();\r\n  }\r\n\r\n  /**\r\n   * Устанавливает начальные значения для игры\r\n   */\r\n  setDefaultValues() {\r\n    super.setDefaultValues();\r\n\r\n    this.setDefaultPositions();\r\n\r\n    this.currentLevel = 1;\r\n    this.audioManager.musicPlay('ark');\r\n  }\r\n\r\n  /**\r\n   * Инициализация менеджеров\r\n   */\r\n  initManagers() {\r\n    super.initManagers('arkanoid');\r\n\r\n    const musicList = [\r\n      { name: 'ark', file: 'ark.mp3', loop: true, volume: 0.3 },\r\n      { name: 'food', file: 'food.mp3', loop: false },\r\n      { name: 'lose', file: 'lose.mp3', loop: false },\r\n      { name: 'win', file: 'win.mp3', loop: false }\r\n    ];\r\n\r\n    this.audioManager.addMusicList(musicList);\r\n  }\r\n\r\n  /**\r\n   * Инициализация элементов игры\r\n   */\r\n  initElements() {\r\n    super.initElements();\r\n\r\n    const platformOptions = {\r\n      context: this.context,\r\n      canvasWidth: this.canvas.width\r\n    }\r\n\r\n    const ballOptions = {\r\n      context: this.context,\r\n      callbackLose: this.changeStatusGame.bind(this),\r\n      canvasSize: {\r\n        width: this.canvas.width,\r\n        height: this.canvas.height,\r\n      }\r\n    }\r\n\r\n    this.platform = new Platform(platformOptions);\r\n    this.ball = new Ball(ballOptions);\r\n    this.blocks = new Blocks(this.context);\r\n  }\r\n\r\n  /**\r\n   * Регистрирует функцию привязывая контекст, для обработкой эвентов клика\r\n   */\r\n  initEvents() {\r\n    super.initEvents();\r\n\r\n    this.eventsUpFunction = this.eventsKeyUp.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Навешивает обработчики событий\r\n   */\r\n  bindEvents() {\r\n    super.bindEvents();\r\n\r\n    document.addEventListener('keyup', this.eventsUpFunction);\r\n  }\r\n\r\n  /**\r\n   * Удаляет обработчики событий\r\n   */\r\n  removeEvents() {\r\n    super.removeEvents();\r\n\r\n    document.removeEventListener('keyup', this.eventsUpFunction);\r\n  }\r\n\r\n  /**\r\n   * Обработчик событий нажатия кнопок\r\n   * @param event\r\n   */\r\n  eventsKeyDown(event?: KeyboardEvent) {\r\n    if (event.code === 'Escape') {\r\n      mediator.publish('game:exit');\r\n\r\n      return;\r\n    }\r\n\r\n    switch (event.code) {\r\n      case 'ArrowLeft':\r\n        this.platform.changeDirection(-1);\r\n\r\n        break;\r\n      case 'ArrowRight':\r\n        this.platform.changeDirection(1);\r\n\r\n        break;\r\n      case 'Space':\r\n        if (!this.isBallOnPlatform) {\r\n          return;\r\n        }\r\n\r\n        this.isBallOnPlatform = false;\r\n        this.ball.setDirectionY(-1);\r\n        this.ball.setDirectionX(-1);\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обработчик событий отпускания кнопок кнопок\r\n   * @param event\r\n   * @private\r\n   */\r\n  private eventsKeyUp(event: KeyboardEvent) {\r\n    if (event.code === 'ArrowLeft' || event.code === 'ArrowRight') {\r\n      this.platform.changeDirection(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Устанавливает значения по умолчанию для объектов игры\r\n   * @private\r\n   */\r\n  private setDefaultPositions() {\r\n    this.isBallOnPlatform = true;\r\n    this.blocks.create(this.currentLevel);\r\n    this.platform.setDefaultValues();\r\n    this.ball.setDefaultValues();\r\n  }\r\n\r\n  /**\r\n   * Проверка столкновения мяча и блоков\r\n   * @private\r\n   */\r\n  private checkCollisionBlocks() {\r\n    this.blocks.items.forEach((block) => {\r\n      if (block.lives < 1) {\r\n        return;\r\n      }\r\n\r\n      if (!this.ball.checkCollision(block)) {\r\n        return;\r\n      }\r\n\r\n      this.audioManager.musicPlay('food');\r\n      this.ball.revertDirectionY();\r\n\r\n      block.lives--;\r\n\r\n      if (block.lives <= 0) {\r\n        this.score++;\r\n        this.storeManager.updateCurrentValue(this.score);\r\n        this.checkWin();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Проверка столкновения мяча и платформы\r\n   * @private\r\n   */\r\n  private checkCollisionPlatform() {\r\n    if (!this.ball.checkCollision(this.platform)) {\r\n      return;\r\n    }\r\n\r\n    this.audioManager.musicPlay('food');\r\n\r\n    this.ball.checkVelocityX(this.platform);\r\n    this.ball.setDirectionY(-1);\r\n  }\r\n\r\n  /**\r\n   * Проверяет игру на победу\r\n   * Если не осталось живых блоков, переходим к следующему уровню\r\n   * @private\r\n   */\r\n  private checkWin() {\r\n    const aliveBlock = this.blocks.items.filter((item) => item.lives > 0);\r\n\r\n    if (aliveBlock.length) {\r\n      return;\r\n    }\r\n\r\n    this.nextLevel();\r\n  }\r\n\r\n  /**\r\n   * Переход к следующему уровню\r\n   * @private\r\n   */\r\n  private nextLevel() {\r\n    /**\r\n     * Если текущий уровень был последним, то игрок победил\r\n     */\r\n    if (this.currentLevel >= this.allLevelCount) {\r\n      this.changeStatusGame('win');\r\n\r\n      return;\r\n    }\r\n\r\n    this.currentLevel++;\r\n    this.setDefaultPositions();\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","// Interfaces\r\nimport { Position, TileOptions } from '../../interfaces/games/2048';\r\n\r\nclass Tile {\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  id: number; // id плитки\r\n  newX = 0; // Новая позиция плитки по Х\r\n  newY = 0; // Новая позиция плитки по Y\r\n  x = 0; // Текущая позиция плитки по Х\r\n  y = 0; // Текущая позиция плитки по Y\r\n  speed = 0.4; // Скорость движения плитки\r\n  width: number; // Ширина плитки\r\n  height: number; // Высота плитки\r\n  padding: number; // Расстояние между плитками плитки\r\n  colors = {\r\n    2: '#a7d3fa',\r\n    4: '#82c2fa',\r\n    8: '#ffa500',\r\n    16: '#ff8400',\r\n    32: '#e36200',\r\n    64: '#bf0000',\r\n    128: '#e8dd4a',\r\n    256: '#bf8104',\r\n    512: '#ff009d',\r\n    1024: '#fc0061',\r\n    2048: '#fa0000'\r\n  }; // Список цветов\r\n  isAnimated = false; // Идёт ли сейчас анимация смещения плитки\r\n\r\n  constructor(options: TileOptions) {\r\n    this.context = options.context;\r\n    this.id = options.id;\r\n    this.x = options.x;\r\n    this.y = options.y;\r\n    this.width = options.width;\r\n    this.height = options.height;\r\n    this.padding = options.padding;\r\n  }\r\n\r\n  /**\r\n   * Задаёт новую позицию плитке\r\n   * @param newPos\r\n   */\r\n  public changePosition(newPos: Position) {\r\n    this.newX = newPos.x;\r\n    this.newY = newPos.y;\r\n\r\n    this.isAnimated = true;\r\n  }\r\n\r\n  /**\r\n   * Рисует плитку\r\n   * @param value\r\n   */\r\n  public draw(value: number) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    this.animateTile();\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    this.context.fillStyle = this.colors[value];\r\n    const posX = (this.width * this.x) + (this.padding * this.x) + this.padding;\r\n    const posY = (this.height * this.y) + (this.padding * this.y) + this.padding;\r\n    this.context.fillRect(posX, posY, this.width, this.height);\r\n    this.context.fillStyle = 'white';\r\n    this.context.textBaseline = \"top\";\r\n    this.context.font = \"52px Pixeboy\";\r\n    let left; // Сдвиг текста от левого края плитки\r\n\r\n    switch (true) {\r\n      case value < 10:\r\n        left = 40;\r\n        break;\r\n      case value < 100:\r\n        left = 30;\r\n        break;\r\n      case value < 1000:\r\n        left = 18;\r\n        break;\r\n      default:\r\n        left = 6;\r\n        break;\r\n    }\r\n\r\n    this.context.fillText(value.toString(), posX + left, posY + 15);\r\n  }\r\n\r\n  /**\r\n   * Если запущена анимация, смещает плитку\r\n   */\r\n  private animateTile() {\r\n    if (this.isAnimated) {\r\n      switch (true) {\r\n      case this.x < this.newX:\r\n        this.x += this.speed;\r\n\r\n        if (this.x > this.newX) {\r\n          this.x = this.newX;\r\n        }\r\n\r\n        break;\r\n      case this.x > this.newX:\r\n        this.x -= this.speed;\r\n\r\n        if (this.x < this.newX) {\r\n          this.x = this.newX;\r\n        }\r\n        break;\r\n      case this.y < this.newY:\r\n        this.y += this.speed;\r\n\r\n        if (this.y > this.newY) {\r\n          this.y = this.newY;\r\n        }\r\n        break;\r\n      case this.y > this.newY:\r\n        this.y -= this.speed;\r\n\r\n        if (this.y < this.newY) {\r\n          this.y = this.newY;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n      }\r\n\r\n      if (this.x === this.newX && this.y === this.newY) {\r\n        this.isAnimated = false;\r\n\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Tile;\r\n","// Interfaces\r\nimport { BackgroundOptions } from '../../interfaces/games/2048';\r\n\r\nclass Background {\r\n  context: CanvasRenderingContext2D; // Контекст канваса\r\n  width: number; // Ширина плитки\r\n  height: number; // Высота плитки\r\n  padding: number; // Расстояние между плитками плитки\r\n  size: number; // Размер матрицы плиток\r\n  color: string; // Цвет плиток\r\n  defaultColor = '#abaeb2' // Цвет плиток по умолчанию\r\n\r\n  constructor(options: BackgroundOptions) {\r\n    this.context = options.context;\r\n    this.width = options.width;\r\n    this.height = options.height;\r\n    this.size = options.size;\r\n    this.padding = options.padding;\r\n    this.color = options?.color || this.defaultColor;\r\n  }\r\n\r\n  /**\r\n   * Рисует фон из плиток\r\n   */\r\n  public draw() {\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        this.context.fillStyle = this.color;\r\n        const posX = (this.width * x) + (this.padding * x) + this.padding;\r\n        const posY = (this.height * y) + (this.padding * y) + this.padding;\r\n        this.context.fillRect(posX, posY, this.width, this.height);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","// Helpers\r\nimport DefaultGame from '../../abstracts/DefaultGame';\r\nimport Mediator from '../../helpers/Mediator';\r\n\r\n// Game elements\r\nimport Tile from './Tile';\r\nimport Background from './Background';\r\n\r\n// Interfaces\r\nimport { BoardCell } from '../../interfaces/games/2048';\r\ntype board = Array<Array<BoardCell>>;\r\n\r\n// Custom\r\nconst mediator = Mediator.getInstance();\r\n\r\nclass Game extends DefaultGame {\r\n  tiles: Array<Tile> = []; // Список плиток\r\n  background: Background; // Фон\r\n  size = 4; // Размер игрового поля size * size\r\n  board: board = []; // Ячейки игрового поля\r\n  isAnimated = false; // Происходит ли сейчас анимация\r\n  isShowNewCell = false; // Происходит ли сейчас вывод новой ячейки\r\n  tileWidth = 105; // Ширина плитки\r\n  tileHeight = 105; // Высота плитки\r\n  tilePadding = 4; // Расстояние между плитками плитки\r\n\r\n  /**\r\n   * Останавливает игру\r\n   */\r\n  stop() {\r\n    super.stop();\r\n    this.audioManager.musicStop('snake');\r\n  }\r\n\r\n  /**\r\n   * Логика игры\r\n   */\r\n  update() {\r\n    super.update();\r\n\r\n    this.draw();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка игры\r\n   */\r\n  draw() {\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    this.background.draw();\r\n\r\n    const cells = this.board.flat();\r\n\r\n    for (let i = 0; i < cells.length; i++) {\r\n      const tile = this.tiles.find((item) => item.id === cells[i].id);\r\n\r\n      if (cells[i].value) {\r\n        if (tile.x !== cells[i].x || tile.y !== cells[i].y) {\r\n          tile.changePosition({\r\n            x: cells[i].x,\r\n            y: cells[i].y\r\n          });\r\n        }\r\n      }\r\n\r\n      tile.draw(cells[i].value);\r\n    }\r\n\r\n    const hasAnimatedTile = this.tiles.find((tile) => tile.isAnimated);\r\n\r\n    this.isAnimated = !!hasAnimatedTile;\r\n  }\r\n\r\n  /**\r\n   * Инициализация менеджеров\r\n   */\r\n  initManagers() {\r\n    super.initManagers('2048');\r\n\r\n    const musicList = [\r\n      { name: 'snake', file: 'snake.mp3', loop: true, volume: 0.3 },\r\n      { name: 'food', file: 'food.mp3', loop: false },\r\n      { name: 'lose', file: 'lose.mp3', loop: false }\r\n    ];\r\n\r\n    this.audioManager.addMusicList(musicList);\r\n  }\r\n\r\n  /**\r\n   * Инициализация элементов игры\r\n   */\r\n  initElements() {\r\n    super.initElements();\r\n\r\n    const backgroundOptions = {\r\n      context: this.context,\r\n      width: this.tileWidth,\r\n      height: this.tileHeight,\r\n      padding: this.tilePadding,\r\n      size: this.size\r\n    }\r\n\r\n    this.background = new Background(backgroundOptions);\r\n  }\r\n\r\n  /**\r\n   * Устанавливает значения по умолчанию\r\n   */\r\n  setDefaultValues() {\r\n    super.setDefaultValues();\r\n\r\n    this.board = this.getEmptyBoard();\r\n    this.generateRandom();\r\n    this.generateRandom();\r\n\r\n    this.tiles = [];\r\n    this.fillTilesList();\r\n\r\n    this.audioManager.musicPlay('snake');\r\n  }\r\n\r\n  /**\r\n   * Выполняет действия при подебе/проигрыше\r\n   */\r\n  changeStatusGame(status: string) {\r\n    super.changeStatusGame(status, 'ark');\r\n  }\r\n\r\n  /**\r\n   * Обработчик событий нажатия кнопок\r\n   * @param event\r\n   */\r\n  eventsKeyDown(event?: KeyboardEvent) {\r\n    if (event.code === 'Escape') {\r\n      mediator.publish('game:exit');\r\n    }\r\n\r\n    if (this.isAnimated || this.gameOver || this.isShowNewCell) {\r\n      return;\r\n    }\r\n\r\n    switch (event.code) {\r\n      case 'ArrowLeft':\r\n        this.actionAfterMove(this.moveLeft(this.board));\r\n\r\n        break;\r\n      case 'ArrowUp':\r\n        this.actionAfterMove(this.moveUp(this.board));\r\n\r\n        break;\r\n      case 'ArrowRight':\r\n        this.actionAfterMove(this.moveRight(this.board));\r\n\r\n        break;\r\n      case 'ArrowDown':\r\n        this.actionAfterMove(this.moveDown(this.board));\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Действия после сдвига таблицы\r\n   */\r\n  private actionAfterMove(newBoard: board) {\r\n    // Если после нажатия кнопки, сдвига не было ничего не делаем\r\n    if (!this.hasDiff(this.board, newBoard)) {\r\n      return;\r\n    }\r\n\r\n    this.board = newBoard;\r\n\r\n    // Добавляем очки за стакнутые ячейки\r\n    this.addScore(this.board);\r\n\r\n    // Проверяем не победил ли пользователь\r\n    if (this.isWin()) {\r\n      this.changeStatusGame('win');\r\n\r\n      return;\r\n    }\r\n\r\n    // Ставим флаг, что добавляется новая плитка на доску\r\n    this.isShowNewCell = true;\r\n\r\n    // Через заданный промежуток времени выводим плитку\r\n    setTimeout(() => {\r\n      this.generateRandom();\r\n      this.isShowNewCell = false;\r\n\r\n      // Проверяем не проигранна ли игра\r\n      if (this.isLose()) {\r\n        this.changeStatusGame('lose');\r\n      }\r\n    }, 150);\r\n  }\r\n\r\n  /**\r\n   * Проверяем не проиграл ли пользователь\r\n   * @private\r\n   */\r\n  private isLose() {\r\n    // Если есть отличие, значит игра не проигранна\r\n    if (this.hasDiff(this.board, this.moveLeft(this.board))) {\r\n      return false;\r\n    }\r\n\r\n    if (this.hasDiff(this.board, this.moveRight(this.board))) {\r\n      return false;\r\n    }\r\n\r\n    if (this.hasDiff(this.board, this.moveUp(this.board))) {\r\n      return false;\r\n    }\r\n\r\n    if (this.hasDiff(this.board, this.moveDown(this.board))) {\r\n      return false;\r\n    }\r\n\r\n    // Если отличий нет, игра проигранна\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Проверяет, есть ли отличие у текущей доски, и у сдвинутой\r\n   * @param board\r\n   * @param newBoard\r\n   * @private\r\n   */\r\n  private hasDiff(board: board, newBoard: board) {\r\n    for (let row = 0; row < this.size; row++) {\r\n      for (let column = 0; column < this.size; column++) {\r\n        if (board[row][column].value !== newBoard[row][column].value) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Возвращает доску смещённую влево\r\n   * @private\r\n   */\r\n  private moveLeft(board: board): board {\r\n    return this.move(board);\r\n  }\r\n\r\n  /**\r\n   * Возвращает доску смещённую вправа\r\n   * @private\r\n   */\r\n  private moveRight(board: board): board {\r\n    // Отражаем доску, чтобы правая сторона стала левой\r\n    const reverseBoard = this.reverse(board);\r\n    // Смещаем доску влево\r\n    const newBoard = this.moveLeft(reverseBoard);\r\n    // Отражаем обратно и возвращаем\r\n    return this.reverse(newBoard);\r\n  }\r\n\r\n  /**\r\n   * Возвращает доску смещённую вверх\r\n   * @private\r\n   */\r\n  private moveUp(board: board): board {\r\n    // Поворачиваем доску на -90 градусов, чтобы верх доски стал левой стороной\r\n    const rotateBoard = this.rotate90deg(board, -1);\r\n    // Смещаем доску влево\r\n    const newBoard = this.moveLeft(rotateBoard);\r\n    // Поворачиваем обратно и возвращаем\r\n    return this.rotate90deg(newBoard,1);\r\n  }\r\n\r\n  /**\r\n   * Возвращает доску смещённую вниз\r\n   * @private\r\n   */\r\n  private moveDown(board: board): board {\r\n    // Поворачиваем доску на 90 градусов, чтобы низ доски стал левой стороной\r\n    const rotateBoard = this.rotate90deg(board, 1);\r\n    // Смещаем доску влево\r\n    const newBoard = this.moveLeft(rotateBoard);\r\n    // Поворачиваем обратно и возвращаем\r\n    return this.rotate90deg(newBoard,-1);\r\n  }\r\n\r\n  /**\r\n   * Формируем пустую доску\r\n   * @private\r\n   */\r\n  private getEmptyBoard() {\r\n    const newBoard = [];\r\n    let id = 0;\r\n\r\n    for (let row = 0; row < this.size; row++) {\r\n      const newRow = [];\r\n\r\n      for (let column = 0; column < this.size; column++) {\r\n        newRow.push({\r\n          value: 0,\r\n          isStacked: false,\r\n          canMove: true,\r\n          x: column,\r\n          y: row,\r\n          id\r\n        });\r\n\r\n        id++;\r\n      }\r\n\r\n      newBoard.push(newRow);\r\n    }\r\n\r\n    return newBoard;\r\n  }\r\n\r\n  /**\r\n   * Наполняем массив плиток\r\n   * @private\r\n   */\r\n  private fillTilesList() {\r\n    const options = {\r\n      context: this.context,\r\n      width: this.tileWidth,\r\n      height: this.tileHeight,\r\n      padding: this.tilePadding\r\n    }\r\n    let id = 0;\r\n\r\n    for (let row = 0; row < this.size; row++) {\r\n      for (let column = 0; column < this.size; column++) {\r\n        const tile = new Tile({\r\n          ...options,\r\n          id,\r\n          x: column,\r\n          y: row\r\n        });\r\n\r\n        this.tiles.push(tile);\r\n\r\n        id++;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Проверяем есть ли заданное число на доске\r\n   * @param value\r\n   */\r\n  private hasValue(value: number) {\r\n    for (let row = 0; row < this.size; row++) {\r\n      for (let column = 0; column < this.size; column++) {\r\n        if (this.board[row][column].value === value) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Проверяем победил ли пользователь\r\n   */\r\n  private isWin() {\r\n    return this.hasValue(2048);\r\n  }\r\n\r\n  /**\r\n   * Проверяем заполнена ли вся доска числами\r\n   */\r\n  private isFull() {\r\n    return !this.hasValue(0);\r\n  }\r\n\r\n  /**\r\n   * Генерирует рандомное число \"4\" или \"2\"\r\n   * и вставляет его в рандомное место на доске\r\n   */\r\n  private generateRandom() {\r\n    if (this.isFull()) {\r\n      return;\r\n    }\r\n\r\n    const randomValueArr = [2, 4];\r\n    const randomValue = randomValueArr[Math.floor(Math.random() * randomValueArr.length)]\r\n    let isFoundEmptyCell = false;\r\n\r\n    while (!isFoundEmptyCell) {\r\n      const randomRow = Math.floor(Math.random() * this.size);\r\n      const randomCol = Math.floor(Math.random() * this.size);\r\n\r\n      if (this.board[randomRow][randomCol].value === 0) {\r\n        this.board[randomRow][randomCol].value = randomValue;\r\n        isFoundEmptyCell = true;\r\n\r\n        const tile = this.tiles.find((tile) => tile.id === this.board[randomRow][randomCol].id);\r\n\r\n        if (tile) {\r\n          tile.x = this.board[randomRow][randomCol].x;\r\n          tile.y = this.board[randomRow][randomCol].y;\r\n        }\r\n\r\n        this.score += randomValue;\r\n        this.storeManager.updateCurrentValue(this.score);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Смещаяет все ячейки в линии влево\r\n   * @param row\r\n   * @private\r\n   */\r\n  private static mergeRow(row: Array<BoardCell>): Array<BoardCell> {\r\n    for (let column = 0; column < row.length; column++) {\r\n      // Если значение равно нулю, то не двигаем ячейку\r\n      if (row[column].value === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Если значение прижато к краю, то оно не может двигаться\r\n      if (column === 0) {\r\n        row[column].canMove = false;\r\n\r\n        continue;\r\n      }\r\n\r\n      // Если предыдущее ячейка пустая, то сдвигаем текущую ячейку на её позицию\r\n      if (row[column - 1].value === 0) {\r\n        row[column - 1].value = row[column].value;\r\n        row[column].value = 0;\r\n\r\n        const tempId = row[column].id;\r\n        row[column].id = row[column - 1].id;\r\n        row[column - 1].id = tempId;\r\n\r\n        continue;\r\n      }\r\n\r\n      // Если предыдущая ячейка имеет значение равное текущей ячейке и значения\r\n      // не были стакнуты, то скрещиваем ячейки\r\n      if (row[column - 1].value === row[column].value && !row[column - 1].isStacked && !row[column].isStacked) {\r\n        row[column - 1].value = row[column - 1].value * 2;\r\n        row[column].value = 0;\r\n        row[column - 1].isStacked = true;\r\n\r\n        const tempId = row[column].id;\r\n        row[column].id = row[column - 1].id;\r\n        row[column - 1].id = tempId;\r\n\r\n        continue;\r\n      }\r\n\r\n      /**\r\n       * Иначе ячейка не может быть сдвинута\r\n       */\r\n      row[column].canMove = false;\r\n    }\r\n\r\n    // Получаем массив ячеек которые больше не могут двигаться\r\n    const checkMoved = row.filter((columnItem) => {\r\n      return columnItem.value === 0 || columnItem.isStacked || !columnItem.canMove;\r\n    });\r\n\r\n    // Если кол-во ячеек которые не могут двигаться, равно длине строки, то возвращаем эту строку\r\n    if (checkMoved.length === row.length) {\r\n      return row;\r\n    }\r\n\r\n    // Иначе повторно вызываем метод со сдвигом\r\n    return Game.mergeRow(row);\r\n  }\r\n\r\n  /**\r\n   * Двигает ячейки на доске\r\n   * @param board\r\n   * @private\r\n   */\r\n  private move(board: board) {\r\n    const newBoard: board = JSON.parse(JSON.stringify(board));\r\n\r\n    for (let row = 0; row < this.size; row++) {\r\n      // Делаем все значения двигаемыми и не стакнутыми\r\n      newBoard[row].forEach((columnItem) => {\r\n        columnItem.canMove = true;\r\n        columnItem.isStacked = false;\r\n      });\r\n\r\n      // Получаем новую строку\r\n      newBoard[row] = Game.mergeRow(newBoard[row]);\r\n    }\r\n\r\n    return newBoard;\r\n  }\r\n\r\n  /**\r\n   * Отражает доску по горизонтали доску\r\n   * Например:\r\n   * [[1, 2], [3, 4]] => [[2, 1], [4, 3]]\r\n   * @param board\r\n   * @private\r\n   */\r\n  private reverse(board: board): board {\r\n    return board.map((row) => {\r\n      const reverseRow: Array<BoardCell> = [];\r\n      const length = row.length;\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        reverseRow[i] = row[length - 1 - i];\r\n      }\r\n\r\n      return reverseRow;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Поворачивает доску на 90 градусов\r\n   * @param board\r\n   * @param direction - 1 - на 90 градусов вправо, -1 - на 90 градусов влево\r\n   * @private\r\n   */\r\n  private rotate90deg(board: board, direction: number) {\r\n    if (direction > 0) {\r\n      return board[0].map((val, index) => board.map(row => row[index]).reverse());\r\n    }\r\n\r\n    return board[0].map((val, index) => board.map(row => row[row.length-1-index]));\r\n  }\r\n\r\n  /**\r\n   * Добавляет очки за стакнутые ячейки\r\n   * @param board\r\n   * @private\r\n   */\r\n  private addScore(board: board) {\r\n    const addScore = board.reduce((sum: number, row) => {\r\n      return row.reduce((rowSum: number, rowAcc: BoardCell) => {\r\n        if (rowAcc.isStacked) {\r\n          rowSum += rowAcc.value;\r\n        }\r\n\r\n        return rowSum;\r\n      }, 0);\r\n    }, 0);\r\n\r\n    if (addScore > 0) {\r\n      this.score += addScore;\r\n      this.storeManager.updateCurrentValue(this.score);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import GameManager from './managers/GameManager';\r\n\r\n// Games\r\nimport GameSnake from './games/snake/Game';\r\nimport GameArkanoid from './games/arkanoid/Game';\r\nimport Game2048 from './games/2048/Game';\r\n\r\nconst gameSnake = new GameSnake();\r\nconst gameArkanoid = new GameArkanoid();\r\nconst game2048 = new Game2048();\r\n\r\nconst games = [\r\n  {\r\n    name: 'snake',\r\n    game: gameSnake,\r\n    helper: [\r\n      { key: 'arrow right &rarr;', description: 'Поворот вправо' },\r\n      { key: 'arrow left &larr;', description: 'Поворот влево' },\r\n      { key: 'arrow up &uarr;', description: 'Поворот вверх' },\r\n      { key: 'arrow down &darr;', description: 'Поворот вниз' },\r\n      { key: 'esc', description: 'Выход' }\r\n    ]\r\n  },\r\n  {\r\n    name: '2048',\r\n    game: game2048,\r\n    helper: [\r\n      { key: 'arrow right &rarr;', description: 'Сдвиг вправо' },\r\n      { key: 'arrow left &larr;', description: 'Сдвиг влево' },\r\n      { key: 'arrow up &uarr;', description: 'Сдвиг вверх' },\r\n      { key: 'arrow down &darr;', description: 'Сдвиг вниз' },\r\n      { key: 'esc', description: 'Выход' }\r\n    ]\r\n  },\r\n  {\r\n    name: 'arkanoid',\r\n    game: gameArkanoid,\r\n    helper: [\r\n      { key: 'arrow right &rarr;', description: 'Двигаться вправо' },\r\n      { key: 'arrow left &larr;', description: 'Двигаться влево' },\r\n      { key: 'space', description: 'Запуск шарика' },\r\n      { key: 'esc', description: 'Выход' }\r\n    ]\r\n  },\r\n];\r\n\r\nwindow.addEventListener('load', () => {\r\n  GameManager.init(games);\r\n});\r\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","p","b","baseURI","self","location","href","nc","dir","sounds","addMusicList","forEach","find","sound","name","manager","createAudioManager","file","loop","volume","musicPlay","musicObject","findMusic","play","musicStop","pause","currentTime","Audio","src","getInstance","Mediator","instance","subscribe","channel","fn","channels","context","callback","unsubscribe","publish","args","Array","props","subscription","getRandomInt","min","max","Math","floor","random","getFilledZeroText","text","defaultString","size","substring","mediator","uiActiveClass","init","UIManager","audioManager","uiManagerMenu","UIManagerMenu","uiManagerScore","UIManagerScore","uiManagerResult","UIManagerResult","uiManagerHelper","UIManagerHelper","setMenuItems","wrapper","menuButtons","createMenuButtons","setScoreItems","currentWrapper","maxWrapper","setBlocks","setResultBlocks","blocks","setResult","score","updateResult","playMusic","setHelperBlock","helperBlock","setWrapper","updateHelperList","helperList","setDefaultHelperList","setDefaultList","activeClass","activeIndex","initAudioManager","bindEvents","button","elem","elemText","className","changeActiveClassMenuButtons","direction","method","classList","addEventListener","event","code","subscribes","current","innerText","textWrapper","scoreWrapper","buttons","add","eventName","showList","description","innerHTML","visibilityClass","VisibilityManager","hideBlocks","names","block","showBlocks","games","gamesList","getElements","initUIManager","initVisibilityManager","GameManager","updateStage","stage","visibilityManager","gameWrapper","getElementById","menuWrapper","statusWrapper","scoreCurrentWrapper","scoreMaxWrapper","resultTextWrapper","resultScoreWrapper","resultButtonRestart","resultButtonExit","gameHelper","buttonsResult","uiManager","activeGame","game","helper","start","stop","currentValue","maxValue","gameName","initStore","publishStoreValue","Number","localStorage","getItem","updateCurrentValue","value","setItem","gameOver","initManagers","initElements","initEvents","setDefaultValues","requestAnimationFrame","bind","removeEvents","changeStatusGame","status","music","storeManager","canvas","getContext","eventsKeyDownFunction","eventsKeyDown","removeEventListener","clearRect","width","height","x","y","dx","dy","cells","cellsCount","defaultColor","canvasSize","cellSize","grid","color","draw","checkOutsideX","checkOutsideY","move","drawSnake","fillStyle","cell","fillRect","addLengthSnake","changeColor","setDirection","getDirection","unshift","pop","foodSize","cellCountX","cellCountY","setRandomPosition","snakeCells","randomX","randomY","countAnimationFrame","slowing","snake","food","isWin","maxCells","snakeProps","foodProps","maxSpeed","segmentCount","segmentsSizes","canvasWidth","segmentSize","segmentSizesLength","isOutside","changeDirection","rightOutside","leftOutside","radius","minVelocityX","maxVelocityX","velocityX","velocityY","callbackLose","beginPath","arc","PI","closePath","fill","checkCollision","getNextPosition","setDirectionX","setDirectionY","revertDirectionY","checkVelocityX","platform","centerPlatform","position","abs","allSegmentsCount","step","checkOutside","followForPlatform","platformX","platformWidth","items","indent","columns","rows","offsetWindow","lives","create","level","createFirstLevel","createSecondLevel","colors","row","column","missColumns","includes","isBallOnPlatform","currentLevel","allLevelCount","ball","checkCollisionBlocks","checkCollisionPlatform","setDefaultPositions","platformOptions","ballOptions","eventsUpFunction","eventsKeyUp","checkWin","filter","nextLevel","newX","newY","speed","isAnimated","padding","changePosition","newPos","animateTile","left","posX","posY","textBaseline","font","fillText","tiles","board","isShowNewCell","tileWidth","tileHeight","tilePadding","background","flat","tile","hasAnimatedTile","backgroundOptions","getEmptyBoard","generateRandom","fillTilesList","actionAfterMove","moveLeft","moveUp","moveRight","moveDown","newBoard","hasDiff","addScore","setTimeout","isLose","reverseBoard","reverse","rotateBoard","rotate90deg","newRow","isStacked","canMove","hasValue","isFull","randomValueArr","randomValue","isFoundEmptyCell","randomRow","randomCol","mergeRow","tempId","columnItem","Game","parse","reverseRow","val","reduce","sum","rowSum","rowAcc","gameSnake","gameArkanoid"],"sourceRoot":""}